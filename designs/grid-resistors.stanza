#use-added-syntax(jitx)
defpackage ocdb/designs/grid-resistors :
  import core

  import jitx
  import jitx/commands
  import ocdb/utils/defaults
  import ocdb/utils/generic-components
  import ocdb/utils/instantiable-bounds

pcb-module series-resistor :
  pin a
  pin b

  inst r1 : chip-resistor(1.0e3)
  inst r2 : chip-resistor(1.0e2)

  net (a r1.p[1])
  net (b r1.p[2])
  net (r1.p[2] r2.p[1])

pcb-module series-resistors (n: Int) :
  pin a
  pin b

  var previous-pin = a
  for idx in 1 through n do :
    inst r : chip-resistor(to-double(idx) * 1.0e3)
    place(r) at loc(0.0, 3.0 * to-double(idx - 1)) on Top
    net (previous-pin r.p[1])

    previous-pin = r.p[2]

  net (previous-pin b)

pcb-module grid-resistors (s-count: Int, p-count: Int) :
  pin a
  pin b

  for idx in 0 to p-count do :
    inst s : series-resistors(s-count)
    place(s) at loc(3.0 * to-double(idx), 0.0) on Top
    net (a s.a)
    net (b s.b)

defn run-design (circuit: Instantiable) :
  val board-shape = offset(compute-rectangle(circuit), 0.5)
  make-default-board(circuit, 2, board-shape)

  view-board()
  view-schematic()

run-design(grid-resistors(3, 4))

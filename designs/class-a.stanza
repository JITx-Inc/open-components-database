#use-added-syntax(jitx)
defpackage ocdb/designs/class-a :
  import core
  import collections
  import math
  import jitx
  import ocdb/defaults
  import jitx/commands
  import ocdb/checks

  import ocdb/bundles
  import ocdb/generic-components
  import ocdb/land-patterns

pcb-module class-a-amplifier (r-set:Double) :
  port vin:power
  pin in
  pin out
  inst r1 : chip-resistor(110.0e3)
  inst r2 : chip-resistor(10.0e3)
  inst r3 : chip-resistor(10.0e3)
  inst r4 : chip-resistor(r-set)

  inst c : ceramic-cap(0.1e-6)

  inst bjt : ocdb/nexperia/PMBT3904/component

  net (vin.vdd r1.p[1] r3.p[1])
  net (bjt.c r3.p[2])
  net (bjt.b r1.p[2] c.p[2] r2.p[1])
  net (bjt.e r4.p[1])
  net (in c.p[1])
  net (vin.gnd r2.p[2] r4.p[2])

; This landpattern is a dummy lp for power-connector
pcb-landpattern sample-lp :
  pad p[1] : smd-pad(1.12, 0.96) at loc(-4.57, 2.54, 0.0)
  pad p[2] : smd-pad(1.12, 0.96) at loc(-4.57, -2.54, 0.0)
  name = "Sample Landpattern"

; This symbol is a dummy symbol for power-connector
pcb-symbol sample-sym :
  name = "Sample Symbol"
  pin vdd at Point(0.0, -2.54) with :
    direction = Down
    length = 0.0
    number-size = 0.761
    name-size = 0.761
  pin gnd at Point(0.0, 2.54) with :
    direction = Up
    length = 0.0
    number-size = 0.761
    name-size = 0.761
  layer("foreground") = Rectangle(5.0, 5.0)

pcb-component power-connector (v-out:Double) :
  port src:power
  spice: 
    "[V] {src.vdd} {src.gnd} {v-out}"
  landpattern = sample-lp(src.vdd => sample-lp.p[1], src.gnd => sample-lp.p[2])
  symbol = sample-sym(src.vdd => sample-sym.vdd, src.gnd => sample-sym.gnd)

pcb-module demo :

  inst power : power-connector(20.0)
  inst amp : class-a-amplifier(2.0e3)
  inst j : pin-header(5)
  net gnd (power.src.gnd, j.p[1])
  net (power.src, amp.vin)
  net vdd (power.src.vdd, j.p[2])

  ; spice:
  ;   "[Vi] {amp.in} {power.src.gnd} SIN(0 1 1k 0 0)"

  ; spice:
  ;   ".temp 80.0"
  ;   ".tran 0.01ms 5m"

make-default-board(demo, 4, 30.0, 20.0)

;Export design to Kicad
; export-netlist(checks.gnd, "hello-world.cir")
export-cad()

; export-netlist(demo.gnd, "ClassA.cir")

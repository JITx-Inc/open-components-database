#use-added-syntax(jitx)
defpackage ocdb/designs/run-checks/digital-io :
  import core
  import collections
  import jitx
  import jitx/commands
  import ocdb/utils/box-symbol
  import ocdb/utils/landpatterns
  import ocdb/utils/property-structs
  import ocdb/utils/generic-components

pcb-component peripheral-pass :
  pin-properties :
    [ pin : Ref | pads : Int ... | side : Dir ]
    [ vdd       | 1         | Up         ]
    [ io        | 2         | Right      ]
    [ gnd       | 3         | Down       ]
  
  make-box-symbol()
  assign-landpattern(SOT23())

  ; Set the Vi high/low and Vo high/low contraints 
  ; based on the net voltage of Vdd.
  eval-when has-property?(self.vdd.voltage) :
    val vdd = max-value(property(self.vdd.voltage))

    property(self.io.digital-io) = 
      DigitalIO(OpenCollector(vol, iol), vil, vih, self.vdd, self.gnd, leakage-current)
    where :
      val vol = min-max(0.0, 0.2 * vdd) ; min 0.0V, max 20% of vdd
      val iol = 30.0e-6
      val vil = typ(0.3 * vdd) ; 30% of vdd
      val vih = typ(0.7 * vdd) ; 70% of vdd
      val leakage-current = 30.0e-6 ; 30uA

pcb-component peripheral-fail :
  pin-properties :
    [ pin : Ref | pads : Int ... | side : Dir ]
    [ vdd       | 1         | Up         ]
    [ io        | 2         | Right      ]
    [ gnd       | 3         | Down       ]
  
  make-box-symbol()
  assign-landpattern(SOT23())

  ; Set the Vi high/low and Vo high/low contraints 
  ; based on the net voltage of Vdd.
  eval-when has-property?(self.vdd.voltage) :
    val vdd = max-value(property(self.vdd.voltage))

    property(self.io.digital-io) = 
      DigitalIO(OpenCollector(vol, iol), vil, vih, self.vdd, self.gnd, leakage-current)
    where :
      val vol = min-max(0.0, 0.3 * vdd) ; min 0.0V, max 30% of vdd (way high!)
      val iol = 30.0e-6
      val vil = typ(vdd) ; 30% of vdd
      val vih = typ(vdd) ; 70% of vdd
      val leakage-current = 30.0e-6 ; 30uA

; Example module showing a single i/o bus with a pullup resistor, 
; showing that the checks pass as expected.
pcb-module io-pass :
  port power : ocdb/utils/bundles/power
  inst U1 : peripheral-pass    ; digital input or output
  inst U2 : peripheral-pass    ; digital input or output

  ; Increase R1 to pass
  inst R1 : chip-resistor(510.0e3) ; pullup resistor

  net (U1.io, U2.io, R1.p[2])
  net (power.vdd U1.vdd, U2.vdd, R1.p[1])
  net (power.gnd U1.gnd, U2.gnd)
  
; Example showing a single i/o bus without a pullup resistor, 
; showing that the checks fail (vi/vo levels and missing 
; pullup on an open-collector )
pcb-module io-fail :
  ; Things of note: 
  ;   - The bus between U1 and U2 is missing a pullup resistor. Check failure.
  ;   - The bus between U3 and U4 has two pullup resistors and the equivalent
  ;     reistance is too low. Check failure.
  ;   - The bus between U4 and U6 has a correct pullup, but the vi/vo high/low
  ;     levels are mismatched. Check failure. 
  port power : ocdb/utils/bundles/power
  
  inst U1 : peripheral-pass    ; digital input or output
  inst U2 : peripheral-fail    ; digital input or output
  inst U3 : peripheral-pass
  inst U4 : peripheral-fail
  inst U5 : peripheral-pass
  inst U6 : peripheral-fail
  inst U7 : peripheral-pass
  
  inst R : chip-resistor(250.0e3)[3]
  net IO-1 (U1.io, U2.io)
  net IO-2 (U3.io, U4.io, R[0].p[1], R[1].p[1])
  net IO-3 (U5.io, U6.io, R[2].p[1])

  net (U7.io power.vdd) ; tied directly to supply
  
  net (power.vdd, U1.vdd, U2.vdd, 
       U3.vdd, U4.vdd, U5.vdd, U6.vdd U7.vdd
       R[0].p[2], R[1].p[2], R[2].p[2])
  
  net (power.gnd, U1.gnd, U2.gnd, 
       U3.gnd, U4.gnd, U5.gnd, U6.gnd
       U7.gnd)
  
public pcb-module digital-io :
  port power : ocdb/utils/bundles/power
  inst pass : io-pass
  inst fail : io-fail
  net (power, pass.power, fail.power)

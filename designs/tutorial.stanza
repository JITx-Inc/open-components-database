#use-added-syntax(jitx)
defpackage ocdb/designs/tutorial :
  import core
  import collections
  import jitx
  import jitx/commands
  import ocdb/defaults
  import ocdb/generic-components
  import ocdb/bundles
  import ocdb/design-vars
  import ocdb/generator-utils
  import ocdb/tolerance
  import ocdb/checks

val board-shape = RoundedRectangle(10.0, 25.0, 0.5)

pcb-module lm317a-regulator (v-out:Toleranced) :
  pin vin 
  pin vout 
  pin gnd 

  inst ldo : ocdb/unisonic/LM317A/component

  net (ldo.input vin)
  net (ldo.output vout)

  cap-strap(vin, gnd, 0.1e-6)
  cap-strap(vout, gnd, 1.0e-6)

  val inherent-variance = tol+%(property(ldo.reference-voltage))
  if inherent-variance > tol+%(v-out):
    fatal("Target regulator accuracy infeasible with LM317A")
  val target-variance = tol+%(v-out) - inherent-variance
  val i1 = 10.0e-3
  val adj-offset = (typ(v-out) - typ(property(ldo.reference-voltage))) / i1 * property(ldo.adj-current)
  inst feedback : ocdb/passive-circuits/voltage-divider(tol%(center(v-out) - adj-offset, 0.0),
                                                        tol%(typ(property(ldo.reference-voltage)), target-variance)
                                                        i1)

  net (feedback.in vout)
  net (feedback.out ldo.adj)
  net (feedback.lo gnd)

  val true-adj-offset = property(ldo.adj-current) * (property(feedback.r-lo.resistance) as Double)

  val out = min-typ-max(min-value(property(ldo.reference-voltage)) * typ(v-out) / max-value(property(feedback.output-voltage)) + true-adj-offset,
                        typ(property(ldo.reference-voltage)) * typ(v-out) / typ(property(feedback.output-voltage)) + true-adj-offset,
                        max-value(property(ldo.reference-voltage)) * typ(v-out) / min-value(property(feedback.output-voltage)) + true-adj-offset)
  check within?(v-out, out)

  println(v-out)
  println(out)

defn run-design (circuit:Instantiable) :
  make-default-board(circuit, 4, board-shape)

  view-board()
  view-schematic()

run-design(lm317a-regulator(tol%(3.3, 0.05)))
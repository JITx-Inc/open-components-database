#use-added-syntax(jitx)
defpackage ocdb/designs/nrf-motion:
  import core
  import jitx
  import jitx/commands
  import ocdb/utils/bundles
  import ocdb/utils/checks
  import ocdb/utils/generic-components
  import ocdb/utils/generator-utils

val board-shape = RoundedRectangle(30.0, 25.0, 3.0)

; Setup the board
defn setup-board () :
  set-board(ocdb/utils/defaults/default-board(ocdb/manufacturers/stackups/jlcpcb-2-layer, board-shape))
  set-rules(ocdb/manufacturers/rules/jlcpcb-rules)

pcb-module nrf-motion :

  inst nrf : ocdb/components/nordic/nRF52840/module()

  ; Add an accelerometer
  inst xl : ocdb/components/st-microelectronics/LIS3DH/module
;   require acc-i2c:i2c from stm.mcu
;   net (acc-i2c, xl.i2c)
;   add-open-drain-pullups(acc-i2c, stm.power.vdd)
;   require tap-detect:gpio from stm.mcu
;   net WAKE (tap-detect.gpio, xl.int[1])

  ; Connect power, apply symbols
  net GND (nrf.gnd)
  property(GND.voltage) = typ(0.0)

  ; Run the schematic review
  check-design(self)

set-current-design("nrf-motion")
set-paper(ANSI-A)
setup-board()
set-main-module(nrf-motion)

;   val main-module = ocdb/utils/generator-utils/run-final-passes(nrf-motion) ; Analyze design with a pass
;   set-main-module(main-module) ; Treat the provided module as a design, and compile it.
;   run-checks("checks.txt")

; View the results
view-board()
view-schematic()
view-design-explorer()

#use-added-syntax(esir)
defpackage ocdb/tests/test-bom :
  import core
  import collections
  import esir
  import ocdb/utils/box-symbol
  import ocdb/tests/default-harness

pcb-package mypackage :
  unique pcb-pad square :
    type = SMD
    shape = Rectangle(0.1, 0.1, loc(0.0, 0.0))
  for i in 1 through 10 do :
    pad a[i] : {square} at loc(to-double(i) * 0.2, 0.0)
  for i in 1 through 10 do :
    pad b[i] : {square} at loc(to-double(i) * 0.2, 2.0)

pcb-component mycomponent :
  port A : pin[10]
  port B : pin[10]
  make-box-symbol $ [
    Left => A[0 to 10]
    Right => B[0 to 10]]
  package = mypackage(
    for i in 0 to 10 do :
      A[i] => a[i + 1]
    for i in 0 to 10 do :
      B[i] => b[i + 1])
  manufacturer = "TE Connectivity Potter & Brumfield Relays"
  mpn = "V23105A5001A201"

pcb-component mycomponent2 :
  port A : pin[10]
  port B : pin[10]
  package = mypackage(
    for i in 0 to 10 do :
      A[i] => a[i + 1]
    for i in 0 to 10 do :
      B[i] => b[i + 1])
  make-box-symbol $ [
    BoxBank $ [
      Left => A[0 to 4]
      Right => B[0 to 4]]
    BoxBank $ [
      Left => A[4 to 10]
      Right => B[4 to 10]]]

pcb-package smallp :
  unique pcb-pad square :
    type = SMD
    shape = Rectangle(0.1, 0.1)
  pad a : {square} at loc(-1.0, 0.0)
  pad b : {square} at loc(1.0, 0.0)
  external-names = ["0402"]

pcb-component myresistor :
  pin a
  pin b
  emodel = Resistor(10.0)
  package = smallp(a => a, b => b)

pcb-module main :
  inst c1 : mycomponent
  inst c2 : mycomponent2
  package(c1) at loc(0.0, 0.0) on Top
  ;package(c2) at loc(0.0, 0.0) on Top
  net (c1.A[0], c2.A[1])
  inst r : myresistor

pcb-design main-design :
  module = main
  rules = default-rules
  board = {default-board(4, 10.0, 10.0)}
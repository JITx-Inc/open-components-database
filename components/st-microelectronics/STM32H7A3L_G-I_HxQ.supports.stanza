; Autogenerated by ocdb/scripts/cubemx-importer
; Family: STM32H7, Package: TFBGA225
#use-added-syntax(jitx)
defpackage ocdb/components/STM32H7A3L_G-I_HxQ/supports:
  import core
  import collections
  import jitx
  import jitx/commands
  import ocdb/bundles
  import ocdb/property-structs

public defn make-supports ():
  inside pcb-component:
    supports swd:
      swd.swdio  => self.PA[13]
      swd.swdclk => self.PA[14]

    supports jtag([JTAG-TRSTN]):
      jtag([JTAG-TRSTN]).tck => self.PA[14]
      jtag([JTAG-TRSTN]).tdi => self.PA[15]
      jtag([JTAG-TRSTN]).tdo => self.PB[3]
      jtag([JTAG-TRSTN]).tms => self.PA[13]
      jtag([JTAG-TRSTN]).trstn => self.PB[4]

    supports gpio:
      gpio.gpio => self.PI[4]

    supports gpio:
      gpio.gpio => self.PB[9]

    supports gpio:
      gpio.gpio => self.PB[6]

    supports gpio:
      gpio.gpio => self.PG[15]

    supports gpio:
      gpio.gpio => self.PK[5]

    supports gpio:
      gpio.gpio => self.PG[14]

    supports gpio:
      gpio.gpio => self.PG[10]

    supports gpio:
      gpio.gpio => self.PG[9]

    supports gpio:
      gpio.gpio => self.PD[7]

    supports gpio:
      gpio.gpio => self.PD[4]

    supports gpio:
      gpio.gpio => self.PD[1]

    supports gpio:
      gpio.gpio => self.PC[10]

    supports gpio:
      gpio.gpio => self.PI[3]

    supports gpio:
      gpio.gpio => self.PE[3]

    supports gpio:
      gpio.gpio => self.PI[5]

    supports gpio:
      gpio.gpio => self.PE[0]

    supports gpio:
      gpio.gpio => self.PB[8]

    supports gpio:
      gpio.gpio => self.PB[4]

    supports gpio:
      gpio.gpio => self.PK[6]

    supports gpio:
      gpio.gpio => self.PK[3]

    supports gpio:
      gpio.gpio => self.PG[11]

    supports gpio:
      gpio.gpio => self.PJ[15]

    supports gpio:
      gpio.gpio => self.PD[6]

    supports gpio:
      gpio.gpio => self.PD[2]

    supports gpio:
      gpio.gpio => self.PC[12]

    supports gpio:
      gpio.gpio => self.PA[14]

    supports gpio:
      gpio.gpio => self.PH[15]

    supports gpio:
      gpio.gpio => self.PH[14]

    supports gpio:
      gpio.gpio => self.PI[8]

    supports gpio:
      gpio.gpio => self.PE[4]

    supports gpio:
      gpio.gpio => self.PI[6]

    supports gpio:
      gpio.gpio => self.PE[1]

    supports gpio:
      gpio.gpio => self.PB[3]

    supports gpio:
      gpio.gpio => self.PK[4]

    supports gpio:
      gpio.gpio => self.PG[12]

    supports gpio:
      gpio.gpio => self.PJ[14]

    supports gpio:
      gpio.gpio => self.PD[5]

    supports gpio:
      gpio.gpio => self.PD[0]

    supports gpio:
      gpio.gpio => self.PA[15]

    supports gpio:
      gpio.gpio => self.PI[0]

    supports gpio:
      gpio.gpio => self.PA[12]

    supports gpio:
      gpio.gpio => self.PA[11]

    supports gpio:
      gpio.gpio => self.PC[14]

    supports gpio:
      gpio.gpio => self.PC[15]

    supports gpio:
      gpio.gpio => self.PE[5]

    supports gpio:
      gpio.gpio => self.PI[7]

    supports gpio:
      gpio.gpio => self.PB[7]

    supports gpio:
      gpio.gpio => self.PK[7]

    supports gpio:
      gpio.gpio => self.PG[13]

    supports gpio:
      gpio.gpio => self.PJ[13]

    supports gpio:
      gpio.gpio => self.PD[3]

    supports gpio:
      gpio.gpio => self.PC[11]

    supports gpio:
      gpio.gpio => self.PI[2]

    supports gpio:
      gpio.gpio => self.PH[13]

    supports gpio:
      gpio.gpio => self.PI[9]

    supports gpio:
      gpio.gpio => self.PE[6]

    supports gpio:
      gpio.gpio => self.PE[2]

    supports gpio:
      gpio.gpio => self.PB[5]

    supports gpio:
      gpio.gpio => self.PJ[12]

    supports gpio:
      gpio.gpio => self.PI[1]

    supports gpio:
      gpio.gpio => self.PA[13]

    supports gpio:
      gpio.gpio => self.PA[10]

    supports gpio:
      gpio.gpio => self.PC[9]

    supports gpio:
      gpio.gpio => self.PC[7]

    supports gpio:
      gpio.gpio => self.PI[10]

    supports gpio:
      gpio.gpio => self.PC[13]

    supports gpio:
      gpio.gpio => self.PA[9]

    supports gpio:
      gpio.gpio => self.PC[8]

    supports gpio:
      gpio.gpio => self.PC[6]

    supports gpio:
      gpio.gpio => self.PG[8]

    supports gpio:
      gpio.gpio => self.PF[1]

    supports gpio:
      gpio.gpio => self.PF[0]

    supports gpio:
      gpio.gpio => self.PI[11]

    supports gpio:
      gpio.gpio => self.PA[8]

    supports gpio:
      gpio.gpio => self.PG[7]

    supports gpio:
      gpio.gpio => self.PG[6]

    supports gpio:
      gpio.gpio => self.PG[5]

    supports gpio:
      gpio.gpio => self.PG[3]

    supports gpio:
      gpio.gpio => self.PF[2]

    supports gpio:
      gpio.gpio => self.PI[12]

    supports gpio:
      gpio.gpio => self.PF[4]

    supports gpio:
      gpio.gpio => self.PI[14]

    supports gpio:
      gpio.gpio => self.PI[13]

    supports gpio:
      gpio.gpio => self.PG[4]

    supports gpio:
      gpio.gpio => self.PG[2]

    supports gpio:
      gpio.gpio => self.PK[2]

    supports gpio:
      gpio.gpio => self.PK[1]

    supports gpio:
      gpio.gpio => self.PF[3]

    supports gpio:
      gpio.gpio => self.PF[5]

    supports gpio:
      gpio.gpio => self.PF[6]

    supports gpio:
      gpio.gpio => self.PF[7]

    supports gpio:
      gpio.gpio => self.PC[2]

    supports gpio:
      gpio.gpio => self.PJ[11]

    supports gpio:
      gpio.gpio => self.PK[0]

    supports gpio:
      gpio.gpio => self.PJ[10]

    supports gpio:
      gpio.gpio => self.PJ[9]

    supports gpio:
      gpio.gpio => self.PJ[8]

    supports gpio:
      gpio.gpio => self.PF[8]

    supports gpio:
      gpio.gpio => self.PF[9]

    supports gpio:
      gpio.gpio => self.PD[13]

    supports gpio:
      gpio.gpio => self.PD[14]

    supports gpio:
      gpio.gpio => self.PD[15]

    supports gpio:
      gpio.gpio => self.PJ[6]

    supports gpio:
      gpio.gpio => self.PJ[7]

    supports gpio:
      gpio.gpio => self.PH[0]

    supports gpio:
      gpio.gpio => self.PH[1]

    supports gpio:
      gpio.gpio => self.PC[0]

    supports gpio:
      gpio.gpio => self.PA[4]

    supports gpio:
      gpio.gpio => self.PB[1]

    supports gpio:
      gpio.gpio => self.PE[12]

    supports gpio:
      gpio.gpio => self.PH[12]

    supports gpio:
      gpio.gpio => self.PD[8]

    supports gpio:
      gpio.gpio => self.PD[10]

    supports gpio:
      gpio.gpio => self.PD[11]

    supports gpio:
      gpio.gpio => self.PD[12]

    supports gpio:
      gpio.gpio => self.PC[1]

    supports gpio:
      gpio.gpio => self.PF[10]

    supports gpio:
      gpio.gpio => self.PH[2]

    supports gpio:
      gpio.gpio => self.PH[4]

    supports gpio:
      gpio.gpio => self.PC[4]

    supports gpio:
      gpio.gpio => self.PI[15]

    supports gpio:
      gpio.gpio => self.PF[13]

    supports gpio:
      gpio.gpio => self.PE[7]

    supports gpio:
      gpio.gpio => self.PE[13]

    supports gpio:
      gpio.gpio => self.PH[6]

    supports gpio:
      gpio.gpio => self.PH[10]

    supports gpio:
      gpio.gpio => self.PB[13]

    supports gpio:
      gpio.gpio => self.PB[14]

    supports gpio:
      gpio.gpio => self.PB[15]

    supports gpio:
      gpio.gpio => self.PC_C[2]

    supports gpio:
      gpio.gpio => self.PC_C[3]

    supports gpio:
      gpio.gpio => self.PC[3]

    supports gpio:
      gpio.gpio => self.PH[3]

    supports gpio:
      gpio.gpio => self.PA[5]

    supports gpio:
      gpio.gpio => self.PC[5]

    supports gpio:
      gpio.gpio => self.PJ[0]

    supports gpio:
      gpio.gpio => self.PF[11]

    supports gpio:
      gpio.gpio => self.PF[15]

    supports gpio:
      gpio.gpio => self.PE[14]

    supports gpio:
      gpio.gpio => self.PE[10]

    supports gpio:
      gpio.gpio => self.PJ[5]

    supports gpio:
      gpio.gpio => self.PH[9]

    supports gpio:
      gpio.gpio => self.PB[12]

    supports gpio:
      gpio.gpio => self.PD[9]

    supports gpio:
      gpio.gpio => self.PA[0]

    supports gpio:
      gpio.gpio => self.PA[1]

    supports gpio:
      gpio.gpio => self.PA_C[0]

    supports gpio:
      gpio.gpio => self.PH[5]

    supports gpio:
      gpio.gpio => self.PA[6]

    supports gpio:
      gpio.gpio => self.PB[0]

    supports gpio:
      gpio.gpio => self.PJ[1]

    supports gpio:
      gpio.gpio => self.PJ[4]

    supports gpio:
      gpio.gpio => self.PF[14]

    supports gpio:
      gpio.gpio => self.PG[1]

    supports gpio:
      gpio.gpio => self.PE[9]

    supports gpio:
      gpio.gpio => self.PE[15]

    supports gpio:
      gpio.gpio => self.PB[11]

    supports gpio:
      gpio.gpio => self.PH[8]

    supports gpio:
      gpio.gpio => self.PH[11]

    supports gpio:
      gpio.gpio => self.PA[2]

    supports gpio:
      gpio.gpio => self.PA_C[1]

    supports gpio:
      gpio.gpio => self.PA[3]

    supports gpio:
      gpio.gpio => self.PA[7]

    supports gpio:
      gpio.gpio => self.PB[2]

    supports gpio:
      gpio.gpio => self.PJ[2]

    supports gpio:
      gpio.gpio => self.PJ[3]

    supports gpio:
      gpio.gpio => self.PF[12]

    supports gpio:
      gpio.gpio => self.PG[0]

    supports gpio:
      gpio.gpio => self.PE[8]

    supports gpio:
      gpio.gpio => self.PE[11]

    supports gpio:
      gpio.gpio => self.PB[10]

    supports gpio:
      gpio.gpio => self.PH[7]

    supports adc:
      adc.adc => self.PC[2]

    supports adc:
      adc.adc => self.PC[0]

    supports adc:
      adc.adc => self.PA[4]

    supports adc:
      adc.adc => self.PB[1]

    supports adc:
      adc.adc => self.PC[1]

    supports adc:
      adc.adc => self.PC[4]

    supports adc:
      adc.adc => self.PF[13]

    supports adc:
      adc.adc => self.PC_C[2]

    supports adc:
      adc.adc => self.PC_C[3]

    supports adc:
      adc.adc => self.PC[3]

    supports adc:
      adc.adc => self.PA[5]

    supports adc:
      adc.adc => self.PC[5]

    supports adc:
      adc.adc => self.PF[11]

    supports adc:
      adc.adc => self.PA[0]

    supports adc:
      adc.adc => self.PA[1]

    supports adc:
      adc.adc => self.PA_C[0]

    supports adc:
      adc.adc => self.PA[6]

    supports adc:
      adc.adc => self.PB[0]

    supports adc:
      adc.adc => self.PF[14]

    supports adc:
      adc.adc => self.PA[2]

    supports adc:
      adc.adc => self.PA_C[1]

    supports adc:
      adc.adc => self.PA[3]

    supports adc:
      adc.adc => self.PA[7]

    supports adc:
      adc.adc => self.PF[12]

    supports dac:
      dac.dac => self.PA[4]

    supports dac:
      dac.dac => self.PA[5]

    supports dac:
      dac.dac => self.PA[6]

    supports timer:
      timer.timer => self.PB[9]

    supports timer:
      timer.timer => self.PB[6]

    supports timer:
      timer.timer => self.PI[5]

    supports timer:
      timer.timer => self.PB[8]

    supports timer:
      timer.timer => self.PB[4]

    supports timer:
      timer.timer => self.PC[12]

    supports timer:
      timer.timer => self.PI[6]

    supports timer:
      timer.timer => self.PB[3]

    supports timer:
      timer.timer => self.PA[15]

    supports timer:
      timer.timer => self.PI[0]

    supports timer:
      timer.timer => self.PA[11]

    supports timer:
      timer.timer => self.PE[5]

    supports timer:
      timer.timer => self.PI[7]

    supports timer:
      timer.timer => self.PB[7]

    supports timer:
      timer.timer => self.PI[2]

    supports timer:
      timer.timer => self.PE[6]

    supports timer:
      timer.timer => self.PB[5]

    supports timer:
      timer.timer => self.PA[10]

    supports timer:
      timer.timer => self.PC[9]

    supports timer:
      timer.timer => self.PC[7]

    supports timer:
      timer.timer => self.PA[9]

    supports timer:
      timer.timer => self.PC[8]

    supports timer:
      timer.timer => self.PC[6]

    supports timer:
      timer.timer => self.PA[8]

    supports timer:
      timer.timer => self.PK[1]

    supports timer:
      timer.timer => self.PF[6]

    supports timer:
      timer.timer => self.PF[7]

    supports timer:
      timer.timer => self.PJ[11]

    supports timer:
      timer.timer => self.PK[0]

    supports timer:
      timer.timer => self.PJ[10]

    supports timer:
      timer.timer => self.PJ[9]

    supports timer:
      timer.timer => self.PJ[8]

    supports timer:
      timer.timer => self.PF[8]

    supports timer:
      timer.timer => self.PF[9]

    supports timer:
      timer.timer => self.PD[13]

    supports timer:
      timer.timer => self.PD[14]

    supports timer:
      timer.timer => self.PD[15]

    supports timer:
      timer.timer => self.PJ[6]

    supports timer:
      timer.timer => self.PB[1]

    supports timer:
      timer.timer => self.PH[12]

    supports timer:
      timer.timer => self.PD[12]

    supports timer:
      timer.timer => self.PE[13]

    supports timer:
      timer.timer => self.PH[6]

    supports timer:
      timer.timer => self.PH[10]

    supports timer:
      timer.timer => self.PB[14]

    supports timer:
      timer.timer => self.PB[15]

    supports timer:
      timer.timer => self.PA[5]

    supports timer:
      timer.timer => self.PE[14]

    supports timer:
      timer.timer => self.PH[9]

    supports timer:
      timer.timer => self.PA[0]

    supports timer:
      timer.timer => self.PA[1]

    supports timer:
      timer.timer => self.PA_C[0]

    supports timer:
      timer.timer => self.PA[6]

    supports timer:
      timer.timer => self.PB[0]

    supports timer:
      timer.timer => self.PE[9]

    supports timer:
      timer.timer => self.PB[11]

    supports timer:
      timer.timer => self.PH[11]

    supports timer:
      timer.timer => self.PA[2]

    supports timer:
      timer.timer => self.PA_C[1]

    supports timer:
      timer.timer => self.PA[3]

    supports timer:
      timer.timer => self.PA[7]

    supports timer:
      timer.timer => self.PE[11]

    supports timer:
      timer.timer => self.PB[10]

    pcb-bundle I2C1_SDA:
      pin p
    pcb-bundle I2C1_SCL:
      pin p

    supports I2C1_SDA:
      I2C1_SDA.p => self.PB[9]
    supports I2C1_SCL:
      I2C1_SCL.p => self.PB[6]
    supports I2C1_SCL:
      I2C1_SCL.p => self.PB[8]
    supports I2C1_SDA:
      I2C1_SDA.p => self.PB[7]
    supports i2c:
      require sda-pin: I2C1_SDA
      require scl-pin: I2C1_SCL
      i2c.sda => sda-pin.p
      i2c.scl => scl-pin.p

    pcb-bundle I2C2_SDA:
      pin p
    pcb-bundle I2C2_SCL:
      pin p

    supports I2C2_SCL:
      I2C2_SCL.p => self.PF[1]
    supports I2C2_SDA:
      I2C2_SDA.p => self.PF[0]
    supports I2C2_SCL:
      I2C2_SCL.p => self.PH[4]
    supports I2C2_SDA:
      I2C2_SDA.p => self.PH[5]
    supports I2C2_SDA:
      I2C2_SDA.p => self.PB[11]
    supports I2C2_SCL:
      I2C2_SCL.p => self.PB[10]
    supports i2c:
      require sda-pin: I2C2_SDA
      require scl-pin: I2C2_SCL
      i2c.sda => sda-pin.p
      i2c.scl => scl-pin.p

    pcb-bundle I2C3_SDA:
      pin p
    pcb-bundle I2C3_SCL:
      pin p

    supports I2C3_SDA:
      I2C3_SDA.p => self.PC[9]
    supports I2C3_SCL:
      I2C3_SCL.p => self.PA[8]
    supports I2C3_SDA:
      I2C3_SDA.p => self.PH[8]
    supports I2C3_SCL:
      I2C3_SCL.p => self.PH[7]
    supports i2c:
      require sda-pin: I2C3_SDA
      require scl-pin: I2C3_SCL
      i2c.sda => sda-pin.p
      i2c.scl => scl-pin.p

    pcb-bundle I2C4_SDA:
      pin p
    pcb-bundle I2C4_SCL:
      pin p

    supports I2C4_SDA:
      I2C4_SDA.p => self.PB[9]
    supports I2C4_SCL:
      I2C4_SCL.p => self.PB[6]
    supports I2C4_SCL:
      I2C4_SCL.p => self.PB[8]
    supports I2C4_SDA:
      I2C4_SDA.p => self.PB[7]
    supports I2C4_SDA:
      I2C4_SDA.p => self.PD[13]
    supports I2C4_SDA:
      I2C4_SDA.p => self.PH[12]
    supports I2C4_SCL:
      I2C4_SCL.p => self.PD[12]
    supports I2C4_SDA:
      I2C4_SDA.p => self.PF[15]
    supports I2C4_SCL:
      I2C4_SCL.p => self.PF[14]
    supports I2C4_SCL:
      I2C4_SCL.p => self.PH[11]
    supports i2c:
      require sda-pin: I2C4_SDA
      require scl-pin: I2C4_SCL
      i2c.sda => sda-pin.p
      i2c.scl => scl-pin.p

    pcb-bundle SPI1_MOSI:
      pin p
    pcb-bundle SPI1_MISO:
      pin p
    pcb-bundle SPI1_NSS:
      pin p
    pcb-bundle SPI1_SCK:
      pin p

    supports SPI1_NSS:
      SPI1_NSS.p => self.PG[10]
    supports SPI1_MISO:
      SPI1_MISO.p => self.PG[9]
    supports SPI1_MOSI:
      SPI1_MOSI.p => self.PD[7]
    supports SPI1_MISO:
      SPI1_MISO.p => self.PB[4]
    supports SPI1_SCK:
      SPI1_SCK.p => self.PG[11]
    supports SPI1_SCK:
      SPI1_SCK.p => self.PB[3]
    supports SPI1_NSS:
      SPI1_NSS.p => self.PA[15]
    supports SPI1_MOSI:
      SPI1_MOSI.p => self.PB[5]
    supports SPI1_NSS:
      SPI1_NSS.p => self.PA[4]
    supports SPI1_SCK:
      SPI1_SCK.p => self.PA[5]
    supports SPI1_MISO:
      SPI1_MISO.p => self.PA[6]
    supports SPI1_MOSI:
      SPI1_MOSI.p => self.PA[7]
    supports spi([SPI-SDO, SPI-SDI, SPI-CS]):
      require sdo-pin: SPI1_MOSI
      require sdi-pin: SPI1_MISO
      require cs-pin: SPI1_NSS
      require sck-pin: SPI1_SCK
      spi([SPI-SDO, SPI-SDI, SPI-CS]).sdo => sdo-pin.p
      spi([SPI-SDO, SPI-SDI, SPI-CS]).sdi => sdi-pin.p
      spi([SPI-SDO, SPI-SDI, SPI-CS]).cs => cs-pin.p
      spi([SPI-SDO, SPI-SDI, SPI-CS]).sck => sck-pin.p

    pcb-bundle SPI2_MOSI:
      pin p
    pcb-bundle SPI2_MISO:
      pin p
    pcb-bundle SPI2_NSS:
      pin p
    pcb-bundle SPI2_SCK:
      pin p

    supports SPI2_NSS:
      SPI2_NSS.p => self.PB[9]
    supports SPI2_MOSI:
      SPI2_MOSI.p => self.PI[3]
    supports SPI2_NSS:
      SPI2_NSS.p => self.PB[4]
    supports SPI2_NSS:
      SPI2_NSS.p => self.PI[0]
    supports SPI2_SCK:
      SPI2_SCK.p => self.PA[12]
    supports SPI2_NSS:
      SPI2_NSS.p => self.PA[11]
    supports SPI2_SCK:
      SPI2_SCK.p => self.PD[3]
    supports SPI2_MISO:
      SPI2_MISO.p => self.PI[2]
    supports SPI2_SCK:
      SPI2_SCK.p => self.PI[1]
    supports SPI2_SCK:
      SPI2_SCK.p => self.PA[9]
    supports SPI2_MISO:
      SPI2_MISO.p => self.PC[2]
    supports SPI2_MOSI:
      SPI2_MOSI.p => self.PC[1]
    supports SPI2_SCK:
      SPI2_SCK.p => self.PB[13]
    supports SPI2_MISO:
      SPI2_MISO.p => self.PB[14]
    supports SPI2_MOSI:
      SPI2_MOSI.p => self.PB[15]
    supports SPI2_MISO:
      SPI2_MISO.p => self.PC_C[2]
    supports SPI2_MOSI:
      SPI2_MOSI.p => self.PC_C[3]
    supports SPI2_MOSI:
      SPI2_MOSI.p => self.PC[3]
    supports SPI2_NSS:
      SPI2_NSS.p => self.PB[12]
    supports SPI2_SCK:
      SPI2_SCK.p => self.PB[10]
    supports spi([SPI-SDO, SPI-SDI, SPI-CS]):
      require sdo-pin: SPI2_MOSI
      require sdi-pin: SPI2_MISO
      require cs-pin: SPI2_NSS
      require sck-pin: SPI2_SCK
      spi([SPI-SDO, SPI-SDI, SPI-CS]).sdo => sdo-pin.p
      spi([SPI-SDO, SPI-SDI, SPI-CS]).sdi => sdi-pin.p
      spi([SPI-SDO, SPI-SDI, SPI-CS]).cs => cs-pin.p
      spi([SPI-SDO, SPI-SDI, SPI-CS]).sck => sck-pin.p

    pcb-bundle SPI3_MOSI:
      pin p
    pcb-bundle SPI3_MISO:
      pin p
    pcb-bundle SPI3_NSS:
      pin p
    pcb-bundle SPI3_SCK:
      pin p

    supports SPI3_SCK:
      SPI3_SCK.p => self.PC[10]
    supports SPI3_MISO:
      SPI3_MISO.p => self.PB[4]
    supports SPI3_MOSI:
      SPI3_MOSI.p => self.PD[6]
    supports SPI3_MOSI:
      SPI3_MOSI.p => self.PC[12]
    supports SPI3_SCK:
      SPI3_SCK.p => self.PB[3]
    supports SPI3_NSS:
      SPI3_NSS.p => self.PA[15]
    supports SPI3_MISO:
      SPI3_MISO.p => self.PC[11]
    supports SPI3_MOSI:
      SPI3_MOSI.p => self.PB[5]
    supports SPI3_NSS:
      SPI3_NSS.p => self.PA[4]
    supports SPI3_MOSI:
      SPI3_MOSI.p => self.PB[2]
    supports spi([SPI-SDO, SPI-SDI, SPI-CS]):
      require sdo-pin: SPI3_MOSI
      require sdi-pin: SPI3_MISO
      require cs-pin: SPI3_NSS
      require sck-pin: SPI3_SCK
      spi([SPI-SDO, SPI-SDI, SPI-CS]).sdo => sdo-pin.p
      spi([SPI-SDO, SPI-SDI, SPI-CS]).sdi => sdi-pin.p
      spi([SPI-SDO, SPI-SDI, SPI-CS]).cs => cs-pin.p
      spi([SPI-SDO, SPI-SDI, SPI-CS]).sck => sck-pin.p

    pcb-bundle SPI4_MOSI:
      pin p
    pcb-bundle SPI4_MISO:
      pin p
    pcb-bundle SPI4_NSS:
      pin p
    pcb-bundle SPI4_SCK:
      pin p

    supports SPI4_NSS:
      SPI4_NSS.p => self.PE[4]
    supports SPI4_MISO:
      SPI4_MISO.p => self.PE[5]
    supports SPI4_MOSI:
      SPI4_MOSI.p => self.PE[6]
    supports SPI4_SCK:
      SPI4_SCK.p => self.PE[2]
    supports SPI4_SCK:
      SPI4_SCK.p => self.PE[12]
    supports SPI4_MISO:
      SPI4_MISO.p => self.PE[13]
    supports SPI4_MOSI:
      SPI4_MOSI.p => self.PE[14]
    supports SPI4_NSS:
      SPI4_NSS.p => self.PE[11]
    supports spi([SPI-SDO, SPI-SDI, SPI-CS]):
      require sdo-pin: SPI4_MOSI
      require sdi-pin: SPI4_MISO
      require cs-pin: SPI4_NSS
      require sck-pin: SPI4_SCK
      spi([SPI-SDO, SPI-SDI, SPI-CS]).sdo => sdo-pin.p
      spi([SPI-SDO, SPI-SDI, SPI-CS]).sdi => sdi-pin.p
      spi([SPI-SDO, SPI-SDI, SPI-CS]).cs => cs-pin.p
      spi([SPI-SDO, SPI-SDI, SPI-CS]).sck => sck-pin.p

    pcb-bundle SPI5_MOSI:
      pin p
    pcb-bundle SPI5_MISO:
      pin p
    pcb-bundle SPI5_NSS:
      pin p
    pcb-bundle SPI5_SCK:
      pin p

    supports SPI5_NSS:
      SPI5_NSS.p => self.PK[1]
    supports SPI5_NSS:
      SPI5_NSS.p => self.PF[6]
    supports SPI5_SCK:
      SPI5_SCK.p => self.PF[7]
    supports SPI5_MISO:
      SPI5_MISO.p => self.PJ[11]
    supports SPI5_SCK:
      SPI5_SCK.p => self.PK[0]
    supports SPI5_MOSI:
      SPI5_MOSI.p => self.PJ[10]
    supports SPI5_MISO:
      SPI5_MISO.p => self.PF[8]
    supports SPI5_MOSI:
      SPI5_MOSI.p => self.PF[9]
    supports SPI5_SCK:
      SPI5_SCK.p => self.PH[6]
    supports SPI5_MOSI:
      SPI5_MOSI.p => self.PF[11]
    supports SPI5_NSS:
      SPI5_NSS.p => self.PH[5]
    supports SPI5_MISO:
      SPI5_MISO.p => self.PH[7]
    supports spi([SPI-SDO, SPI-SDI, SPI-CS]):
      require sdo-pin: SPI5_MOSI
      require sdi-pin: SPI5_MISO
      require cs-pin: SPI5_NSS
      require sck-pin: SPI5_SCK
      spi([SPI-SDO, SPI-SDI, SPI-CS]).sdo => sdo-pin.p
      spi([SPI-SDO, SPI-SDI, SPI-CS]).sdi => sdi-pin.p
      spi([SPI-SDO, SPI-SDI, SPI-CS]).cs => cs-pin.p
      spi([SPI-SDO, SPI-SDI, SPI-CS]).sck => sck-pin.p

    pcb-bundle SPI6_MOSI:
      pin p
    pcb-bundle SPI6_MISO:
      pin p
    pcb-bundle SPI6_NSS:
      pin p
    pcb-bundle SPI6_SCK:
      pin p

    supports SPI6_MOSI:
      SPI6_MOSI.p => self.PG[14]
    supports SPI6_MISO:
      SPI6_MISO.p => self.PB[4]
    supports SPI6_SCK:
      SPI6_SCK.p => self.PC[12]
    supports SPI6_SCK:
      SPI6_SCK.p => self.PB[3]
    supports SPI6_MISO:
      SPI6_MISO.p => self.PG[12]
    supports SPI6_NSS:
      SPI6_NSS.p => self.PA[15]
    supports SPI6_SCK:
      SPI6_SCK.p => self.PG[13]
    supports SPI6_MOSI:
      SPI6_MOSI.p => self.PB[5]
    supports SPI6_NSS:
      SPI6_NSS.p => self.PG[8]
    supports SPI6_NSS:
      SPI6_NSS.p => self.PA[4]
    supports SPI6_SCK:
      SPI6_SCK.p => self.PA[5]
    supports SPI6_NSS:
      SPI6_NSS.p => self.PA[0]
    supports SPI6_NSS:
      SPI6_NSS.p => self.PA_C[0]
    supports SPI6_MISO:
      SPI6_MISO.p => self.PA[6]
    supports SPI6_MOSI:
      SPI6_MOSI.p => self.PA[7]
    supports spi([SPI-SDO, SPI-SDI, SPI-CS]):
      require sdo-pin: SPI6_MOSI
      require sdi-pin: SPI6_MISO
      require cs-pin: SPI6_NSS
      require sck-pin: SPI6_SCK
      spi([SPI-SDO, SPI-SDI, SPI-CS]).sdo => sdo-pin.p
      spi([SPI-SDO, SPI-SDI, SPI-CS]).sdi => sdi-pin.p
      spi([SPI-SDO, SPI-SDI, SPI-CS]).cs => cs-pin.p
      spi([SPI-SDO, SPI-SDI, SPI-CS]).sck => sck-pin.p

    pcb-bundle UART4_CTS:
      pin p
    pcb-bundle UART4_RTS:
      pin p
    pcb-bundle UART4_DE:
      pin p
    pcb-bundle UART4_RX:
      pin p
    pcb-bundle UART4_TX:
      pin p

    supports UART4_TX:
      UART4_TX.p => self.PB[9]
    supports UART4_TX:
      UART4_TX.p => self.PD[1]
    supports UART4_TX:
      UART4_TX.p => self.PC[10]
    supports UART4_RX:
      UART4_RX.p => self.PB[8]
    supports UART4_RX:
      UART4_RX.p => self.PH[14]
    supports UART4_RX:
      UART4_RX.p => self.PD[0]
    supports UART4_RTS:
      UART4_RTS.p => self.PA[15]
    supports UART4_DE:
      UART4_DE.p => self.PA[15]
    supports UART4_TX:
      UART4_TX.p => self.PA[12]
    supports UART4_RX:
      UART4_RX.p => self.PA[11]
    supports UART4_RX:
      UART4_RX.p => self.PC[11]
    supports UART4_TX:
      UART4_TX.p => self.PH[13]
    supports UART4_RX:
      UART4_RX.p => self.PI[9]
    supports UART4_RTS:
      UART4_RTS.p => self.PB[14]
    supports UART4_DE:
      UART4_DE.p => self.PB[14]
    supports UART4_CTS:
      UART4_CTS.p => self.PB[15]
    supports UART4_TX:
      UART4_TX.p => self.PA[0]
    supports UART4_RX:
      UART4_RX.p => self.PA[1]
    supports UART4_TX:
      UART4_TX.p => self.PA_C[0]
    supports UART4_CTS:
      UART4_CTS.p => self.PB[0]
    supports UART4_RX:
      UART4_RX.p => self.PA_C[1]
    supports uart([UART-CTS, UART-RTS, UART-DE]):
      require cts-pin: UART4_CTS
      require rts-pin: UART4_RTS
      require de-pin: UART4_DE
      require rx-pin: UART4_RX
      require tx-pin: UART4_TX
      uart([UART-CTS, UART-RTS, UART-DE]).cts => cts-pin.p
      uart([UART-CTS, UART-RTS, UART-DE]).rts => rts-pin.p
      uart([UART-CTS, UART-RTS, UART-DE]).de => de-pin.p
      uart([UART-CTS, UART-RTS, UART-DE]).rx => rx-pin.p
      uart([UART-CTS, UART-RTS, UART-DE]).tx => tx-pin.p

    pcb-bundle UART5_CTS:
      pin p
    pcb-bundle UART5_RTS:
      pin p
    pcb-bundle UART5_DE:
      pin p
    pcb-bundle UART5_RX:
      pin p
    pcb-bundle UART5_TX:
      pin p

    supports UART5_TX:
      UART5_TX.p => self.PB[6]
    supports UART5_RX:
      UART5_RX.p => self.PD[2]
    supports UART5_TX:
      UART5_TX.p => self.PC[12]
    supports UART5_RX:
      UART5_RX.p => self.PB[5]
    supports UART5_CTS:
      UART5_CTS.p => self.PC[9]
    supports UART5_RTS:
      UART5_RTS.p => self.PC[8]
    supports UART5_DE:
      UART5_DE.p => self.PC[8]
    supports UART5_TX:
      UART5_TX.p => self.PB[13]
    supports UART5_RX:
      UART5_RX.p => self.PB[12]
    supports uart([UART-CTS, UART-RTS, UART-DE]):
      require cts-pin: UART5_CTS
      require rts-pin: UART5_RTS
      require de-pin: UART5_DE
      require rx-pin: UART5_RX
      require tx-pin: UART5_TX
      uart([UART-CTS, UART-RTS, UART-DE]).cts => cts-pin.p
      uart([UART-CTS, UART-RTS, UART-DE]).rts => rts-pin.p
      uart([UART-CTS, UART-RTS, UART-DE]).de => de-pin.p
      uart([UART-CTS, UART-RTS, UART-DE]).rx => rx-pin.p
      uart([UART-CTS, UART-RTS, UART-DE]).tx => tx-pin.p

    pcb-bundle UART7_CTS:
      pin p
    pcb-bundle UART7_RTS:
      pin p
    pcb-bundle UART7_DE:
      pin p
    pcb-bundle UART7_RX:
      pin p
    pcb-bundle UART7_TX:
      pin p

    supports UART7_TX:
      UART7_TX.p => self.PB[4]
    supports UART7_RX:
      UART7_RX.p => self.PB[3]
    supports UART7_TX:
      UART7_TX.p => self.PA[15]
    supports UART7_RX:
      UART7_RX.p => self.PA[8]
    supports UART7_RX:
      UART7_RX.p => self.PF[6]
    supports UART7_TX:
      UART7_TX.p => self.PF[7]
    supports UART7_RTS:
      UART7_RTS.p => self.PF[8]
    supports UART7_DE:
      UART7_DE.p => self.PF[8]
    supports UART7_CTS:
      UART7_CTS.p => self.PF[9]
    supports UART7_RX:
      UART7_RX.p => self.PE[7]
    supports UART7_CTS:
      UART7_CTS.p => self.PE[10]
    supports UART7_RTS:
      UART7_RTS.p => self.PE[9]
    supports UART7_DE:
      UART7_DE.p => self.PE[9]
    supports UART7_TX:
      UART7_TX.p => self.PE[8]
    supports uart([UART-CTS, UART-RTS, UART-DE]):
      require cts-pin: UART7_CTS
      require rts-pin: UART7_RTS
      require de-pin: UART7_DE
      require rx-pin: UART7_RX
      require tx-pin: UART7_TX
      uart([UART-CTS, UART-RTS, UART-DE]).cts => cts-pin.p
      uart([UART-CTS, UART-RTS, UART-DE]).rts => rts-pin.p
      uart([UART-CTS, UART-RTS, UART-DE]).de => de-pin.p
      uart([UART-CTS, UART-RTS, UART-DE]).rx => rx-pin.p
      uart([UART-CTS, UART-RTS, UART-DE]).tx => tx-pin.p

    pcb-bundle UART8_CTS:
      pin p
    pcb-bundle UART8_RTS:
      pin p
    pcb-bundle UART8_DE:
      pin p
    pcb-bundle UART8_RX:
      pin p
    pcb-bundle UART8_TX:
      pin p

    supports UART8_RX:
      UART8_RX.p => self.PE[0]
    supports UART8_TX:
      UART8_TX.p => self.PE[1]
    supports UART8_RX:
      UART8_RX.p => self.PJ[9]
    supports UART8_TX:
      UART8_TX.p => self.PJ[8]
    supports UART8_CTS:
      UART8_CTS.p => self.PD[14]
    supports UART8_RTS:
      UART8_RTS.p => self.PD[15]
    supports UART8_DE:
      UART8_DE.p => self.PD[15]
    supports uart([UART-CTS, UART-RTS, UART-DE]):
      require cts-pin: UART8_CTS
      require rts-pin: UART8_RTS
      require de-pin: UART8_DE
      require rx-pin: UART8_RX
      require tx-pin: UART8_TX
      uart([UART-CTS, UART-RTS, UART-DE]).cts => cts-pin.p
      uart([UART-CTS, UART-RTS, UART-DE]).rts => rts-pin.p
      uart([UART-CTS, UART-RTS, UART-DE]).de => de-pin.p
      uart([UART-CTS, UART-RTS, UART-DE]).rx => rx-pin.p
      uart([UART-CTS, UART-RTS, UART-DE]).tx => tx-pin.p

    pcb-bundle UART9_CTS:
      pin p
    pcb-bundle UART9_RTS:
      pin p
    pcb-bundle UART9_DE:
      pin p
    pcb-bundle UART9_RX:
      pin p
    pcb-bundle UART9_TX:
      pin p

    supports UART9_CTS:
      UART9_CTS.p => self.PD[0]
    supports UART9_RTS:
      UART9_RTS.p => self.PD[13]
    supports UART9_DE:
      UART9_DE.p => self.PD[13]
    supports UART9_RX:
      UART9_RX.p => self.PD[14]
    supports UART9_TX:
      UART9_TX.p => self.PD[15]
    supports UART9_CTS:
      UART9_CTS.p => self.PJ[4]
    supports UART9_TX:
      UART9_TX.p => self.PG[1]
    supports UART9_RTS:
      UART9_RTS.p => self.PJ[3]
    supports UART9_DE:
      UART9_DE.p => self.PJ[3]
    supports UART9_RX:
      UART9_RX.p => self.PG[0]
    supports uart([UART-CTS, UART-RTS, UART-DE]):
      require cts-pin: UART9_CTS
      require rts-pin: UART9_RTS
      require de-pin: UART9_DE
      require rx-pin: UART9_RX
      require tx-pin: UART9_TX
      uart([UART-CTS, UART-RTS, UART-DE]).cts => cts-pin.p
      uart([UART-CTS, UART-RTS, UART-DE]).rts => rts-pin.p
      uart([UART-CTS, UART-RTS, UART-DE]).de => de-pin.p
      uart([UART-CTS, UART-RTS, UART-DE]).rx => rx-pin.p
      uart([UART-CTS, UART-RTS, UART-DE]).tx => tx-pin.p

    pcb-bundle USART1_CTS:
      pin p
    pcb-bundle USART1_RTS:
      pin p
    pcb-bundle USART1_CK:
      pin p
    pcb-bundle USART1_DE:
      pin p
    pcb-bundle USART1_NSS:
      pin p
    pcb-bundle USART1_RX:
      pin p
    pcb-bundle USART1_TX:
      pin p

    supports USART1_TX:
      USART1_TX.p => self.PB[6]
    supports USART1_RTS:
      USART1_RTS.p => self.PA[12]
    supports USART1_DE:
      USART1_DE.p => self.PA[12]
    supports USART1_CTS:
      USART1_CTS.p => self.PA[11]
    supports USART1_NSS:
      USART1_NSS.p => self.PA[11]
    supports USART1_RX:
      USART1_RX.p => self.PB[7]
    supports USART1_RX:
      USART1_RX.p => self.PA[10]
    supports USART1_TX:
      USART1_TX.p => self.PA[9]
    supports USART1_CK:
      USART1_CK.p => self.PA[8]
    supports USART1_TX:
      USART1_TX.p => self.PB[14]
    supports USART1_RX:
      USART1_RX.p => self.PB[15]
    supports usart([UART-CTS, UART-RTS, UART-CK, UART-DE, UART-CS]):
      require cts-pin: USART1_CTS
      require rts-pin: USART1_RTS
      require ck-pin: USART1_CK
      require de-pin: USART1_DE
      require cs-pin: USART1_NSS
      require rx-pin: USART1_RX
      require tx-pin: USART1_TX
      usart([UART-CTS, UART-RTS, UART-CK, UART-DE, UART-CS]).cts => cts-pin.p
      usart([UART-CTS, UART-RTS, UART-CK, UART-DE, UART-CS]).rts => rts-pin.p
      usart([UART-CTS, UART-RTS, UART-CK, UART-DE, UART-CS]).ck => ck-pin.p
      usart([UART-CTS, UART-RTS, UART-CK, UART-DE, UART-CS]).de => de-pin.p
      usart([UART-CTS, UART-RTS, UART-CK, UART-DE, UART-CS]).cs => cs-pin.p
      usart([UART-CTS, UART-RTS, UART-CK, UART-DE, UART-CS]).rx => rx-pin.p
      usart([UART-CTS, UART-RTS, UART-CK, UART-DE, UART-CS]).tx => tx-pin.p

    pcb-bundle USART2_CTS:
      pin p
    pcb-bundle USART2_RTS:
      pin p
    pcb-bundle USART2_CK:
      pin p
    pcb-bundle USART2_DE:
      pin p
    pcb-bundle USART2_NSS:
      pin p
    pcb-bundle USART2_RX:
      pin p
    pcb-bundle USART2_TX:
      pin p

    supports USART2_CK:
      USART2_CK.p => self.PD[7]
    supports USART2_RTS:
      USART2_RTS.p => self.PD[4]
    supports USART2_DE:
      USART2_DE.p => self.PD[4]
    supports USART2_RX:
      USART2_RX.p => self.PD[6]
    supports USART2_TX:
      USART2_TX.p => self.PD[5]
    supports USART2_CTS:
      USART2_CTS.p => self.PD[3]
    supports USART2_NSS:
      USART2_NSS.p => self.PD[3]
    supports USART2_CK:
      USART2_CK.p => self.PA[4]
    supports USART2_CTS:
      USART2_CTS.p => self.PA[0]
    supports USART2_NSS:
      USART2_NSS.p => self.PA[0]
    supports USART2_RTS:
      USART2_RTS.p => self.PA[1]
    supports USART2_DE:
      USART2_DE.p => self.PA[1]
    supports USART2_CTS:
      USART2_CTS.p => self.PA_C[0]
    supports USART2_NSS:
      USART2_NSS.p => self.PA_C[0]
    supports USART2_TX:
      USART2_TX.p => self.PA[2]
    supports USART2_RTS:
      USART2_RTS.p => self.PA_C[1]
    supports USART2_DE:
      USART2_DE.p => self.PA_C[1]
    supports USART2_RX:
      USART2_RX.p => self.PA[3]
    supports usart([UART-CTS, UART-RTS, UART-CK, UART-DE, UART-CS]):
      require cts-pin: USART2_CTS
      require rts-pin: USART2_RTS
      require ck-pin: USART2_CK
      require de-pin: USART2_DE
      require cs-pin: USART2_NSS
      require rx-pin: USART2_RX
      require tx-pin: USART2_TX
      usart([UART-CTS, UART-RTS, UART-CK, UART-DE, UART-CS]).cts => cts-pin.p
      usart([UART-CTS, UART-RTS, UART-CK, UART-DE, UART-CS]).rts => rts-pin.p
      usart([UART-CTS, UART-RTS, UART-CK, UART-DE, UART-CS]).ck => ck-pin.p
      usart([UART-CTS, UART-RTS, UART-CK, UART-DE, UART-CS]).de => de-pin.p
      usart([UART-CTS, UART-RTS, UART-CK, UART-DE, UART-CS]).cs => cs-pin.p
      usart([UART-CTS, UART-RTS, UART-CK, UART-DE, UART-CS]).rx => rx-pin.p
      usart([UART-CTS, UART-RTS, UART-CK, UART-DE, UART-CS]).tx => tx-pin.p

    pcb-bundle USART3_CTS:
      pin p
    pcb-bundle USART3_RTS:
      pin p
    pcb-bundle USART3_CK:
      pin p
    pcb-bundle USART3_DE:
      pin p
    pcb-bundle USART3_NSS:
      pin p
    pcb-bundle USART3_RX:
      pin p
    pcb-bundle USART3_TX:
      pin p

    supports USART3_TX:
      USART3_TX.p => self.PC[10]
    supports USART3_CK:
      USART3_CK.p => self.PC[12]
    supports USART3_RX:
      USART3_RX.p => self.PC[11]
    supports USART3_TX:
      USART3_TX.p => self.PD[8]
    supports USART3_CK:
      USART3_CK.p => self.PD[10]
    supports USART3_CTS:
      USART3_CTS.p => self.PD[11]
    supports USART3_NSS:
      USART3_NSS.p => self.PD[11]
    supports USART3_RTS:
      USART3_RTS.p => self.PD[12]
    supports USART3_DE:
      USART3_DE.p => self.PD[12]
    supports USART3_CTS:
      USART3_CTS.p => self.PB[13]
    supports USART3_NSS:
      USART3_NSS.p => self.PB[13]
    supports USART3_RTS:
      USART3_RTS.p => self.PB[14]
    supports USART3_DE:
      USART3_DE.p => self.PB[14]
    supports USART3_CK:
      USART3_CK.p => self.PB[12]
    supports USART3_RX:
      USART3_RX.p => self.PD[9]
    supports USART3_RX:
      USART3_RX.p => self.PB[11]
    supports USART3_TX:
      USART3_TX.p => self.PB[10]
    supports usart([UART-CTS, UART-RTS, UART-CK, UART-DE, UART-CS]):
      require cts-pin: USART3_CTS
      require rts-pin: USART3_RTS
      require ck-pin: USART3_CK
      require de-pin: USART3_DE
      require cs-pin: USART3_NSS
      require rx-pin: USART3_RX
      require tx-pin: USART3_TX
      usart([UART-CTS, UART-RTS, UART-CK, UART-DE, UART-CS]).cts => cts-pin.p
      usart([UART-CTS, UART-RTS, UART-CK, UART-DE, UART-CS]).rts => rts-pin.p
      usart([UART-CTS, UART-RTS, UART-CK, UART-DE, UART-CS]).ck => ck-pin.p
      usart([UART-CTS, UART-RTS, UART-CK, UART-DE, UART-CS]).de => de-pin.p
      usart([UART-CTS, UART-RTS, UART-CK, UART-DE, UART-CS]).cs => cs-pin.p
      usart([UART-CTS, UART-RTS, UART-CK, UART-DE, UART-CS]).rx => rx-pin.p
      usart([UART-CTS, UART-RTS, UART-CK, UART-DE, UART-CS]).tx => tx-pin.p

    pcb-bundle USART6_CTS:
      pin p
    pcb-bundle USART6_RTS:
      pin p
    pcb-bundle USART6_CK:
      pin p
    pcb-bundle USART6_DE:
      pin p
    pcb-bundle USART6_NSS:
      pin p
    pcb-bundle USART6_RX:
      pin p
    pcb-bundle USART6_TX:
      pin p

    supports USART6_CTS:
      USART6_CTS.p => self.PG[15]
    supports USART6_NSS:
      USART6_NSS.p => self.PG[15]
    supports USART6_TX:
      USART6_TX.p => self.PG[14]
    supports USART6_RX:
      USART6_RX.p => self.PG[9]
    supports USART6_RTS:
      USART6_RTS.p => self.PG[12]
    supports USART6_DE:
      USART6_DE.p => self.PG[12]
    supports USART6_CTS:
      USART6_CTS.p => self.PG[13]
    supports USART6_NSS:
      USART6_NSS.p => self.PG[13]
    supports USART6_RX:
      USART6_RX.p => self.PC[7]
    supports USART6_CK:
      USART6_CK.p => self.PC[8]
    supports USART6_TX:
      USART6_TX.p => self.PC[6]
    supports USART6_RTS:
      USART6_RTS.p => self.PG[8]
    supports USART6_DE:
      USART6_DE.p => self.PG[8]
    supports USART6_CK:
      USART6_CK.p => self.PG[7]
    supports usart([UART-CTS, UART-RTS, UART-CK, UART-DE, UART-CS]):
      require cts-pin: USART6_CTS
      require rts-pin: USART6_RTS
      require ck-pin: USART6_CK
      require de-pin: USART6_DE
      require cs-pin: USART6_NSS
      require rx-pin: USART6_RX
      require tx-pin: USART6_TX
      usart([UART-CTS, UART-RTS, UART-CK, UART-DE, UART-CS]).cts => cts-pin.p
      usart([UART-CTS, UART-RTS, UART-CK, UART-DE, UART-CS]).rts => rts-pin.p
      usart([UART-CTS, UART-RTS, UART-CK, UART-DE, UART-CS]).ck => ck-pin.p
      usart([UART-CTS, UART-RTS, UART-CK, UART-DE, UART-CS]).de => de-pin.p
      usart([UART-CTS, UART-RTS, UART-CK, UART-DE, UART-CS]).cs => cs-pin.p
      usart([UART-CTS, UART-RTS, UART-CK, UART-DE, UART-CS]).rx => rx-pin.p
      usart([UART-CTS, UART-RTS, UART-CK, UART-DE, UART-CS]).tx => tx-pin.p

    pcb-bundle USART10_CTS:
      pin p
    pcb-bundle USART10_RTS:
      pin p
    pcb-bundle USART10_CK:
      pin p
    pcb-bundle USART10_DE:
      pin p
    pcb-bundle USART10_NSS:
      pin p
    pcb-bundle USART10_RX:
      pin p
    pcb-bundle USART10_TX:
      pin p

    supports USART10_CK:
      USART10_CK.p => self.PG[15]
    supports USART10_RTS:
      USART10_RTS.p => self.PG[14]
    supports USART10_DE:
      USART10_DE.p => self.PG[14]
    supports USART10_TX:
      USART10_TX.p => self.PE[3]
    supports USART10_RX:
      USART10_RX.p => self.PG[11]
    supports USART10_TX:
      USART10_TX.p => self.PG[12]
    supports USART10_CTS:
      USART10_CTS.p => self.PG[13]
    supports USART10_NSS:
      USART10_NSS.p => self.PG[13]
    supports USART10_RX:
      USART10_RX.p => self.PE[2]
    supports USART10_CK:
      USART10_CK.p => self.PE[15]
    supports usart([UART-CTS, UART-RTS, UART-CK, UART-DE, UART-CS]):
      require cts-pin: USART10_CTS
      require rts-pin: USART10_RTS
      require ck-pin: USART10_CK
      require de-pin: USART10_DE
      require cs-pin: USART10_NSS
      require rx-pin: USART10_RX
      require tx-pin: USART10_TX
      usart([UART-CTS, UART-RTS, UART-CK, UART-DE, UART-CS]).cts => cts-pin.p
      usart([UART-CTS, UART-RTS, UART-CK, UART-DE, UART-CS]).rts => rts-pin.p
      usart([UART-CTS, UART-RTS, UART-CK, UART-DE, UART-CS]).ck => ck-pin.p
      usart([UART-CTS, UART-RTS, UART-CK, UART-DE, UART-CS]).de => de-pin.p
      usart([UART-CTS, UART-RTS, UART-CK, UART-DE, UART-CS]).cs => cs-pin.p
      usart([UART-CTS, UART-RTS, UART-CK, UART-DE, UART-CS]).rx => rx-pin.p
      usart([UART-CTS, UART-RTS, UART-CK, UART-DE, UART-CS]).tx => tx-pin.p

    pcb-bundle I2S1_MCK:
      pin p
    pcb-bundle I2S1_SDI:
      pin p
    pcb-bundle I2S1_SDO:
      pin p
    pcb-bundle I2S1_CK:
      pin p
    pcb-bundle I2S1_WS:
      pin p

    supports I2S1_WS:
      I2S1_WS.p => self.PG[10]
    supports I2S1_SDI:
      I2S1_SDI.p => self.PG[9]
    supports I2S1_SDO:
      I2S1_SDO.p => self.PD[7]
    supports I2S1_SDI:
      I2S1_SDI.p => self.PB[4]
    supports I2S1_CK:
      I2S1_CK.p => self.PG[11]
    supports I2S1_CK:
      I2S1_CK.p => self.PB[3]
    supports I2S1_WS:
      I2S1_WS.p => self.PA[15]
    supports I2S1_SDO:
      I2S1_SDO.p => self.PB[5]
    supports I2S1_WS:
      I2S1_WS.p => self.PA[4]
    supports I2S1_MCK:
      I2S1_MCK.p => self.PC[4]
    supports I2S1_CK:
      I2S1_CK.p => self.PA[5]
    supports I2S1_SDI:
      I2S1_SDI.p => self.PA[6]
    supports I2S1_SDO:
      I2S1_SDO.p => self.PA[7]
    supports i2s([I2S-MCK, I2S-SDMI]):
      require mck-pin: I2S1_MCK
      require sdmi-pin: I2S1_SDI
      require sdmo-pin: I2S1_SDO
      require ck-pin: I2S1_CK
      require ws-pin: I2S1_WS
      i2s([I2S-MCK, I2S-SDMI]).mck => mck-pin.p
      i2s([I2S-MCK, I2S-SDMI]).sdmi => sdmi-pin.p
      i2s([I2S-MCK, I2S-SDMI]).sdmo => sdmo-pin.p
      i2s([I2S-MCK, I2S-SDMI]).ck => ck-pin.p
      i2s([I2S-MCK, I2S-SDMI]).ws => ws-pin.p

    pcb-bundle I2S2_MCK:
      pin p
    pcb-bundle I2S2_SDI:
      pin p
    pcb-bundle I2S2_SDO:
      pin p
    pcb-bundle I2S2_CK:
      pin p
    pcb-bundle I2S2_WS:
      pin p

    supports I2S2_WS:
      I2S2_WS.p => self.PB[9]
    supports I2S2_SDO:
      I2S2_SDO.p => self.PI[3]
    supports I2S2_WS:
      I2S2_WS.p => self.PB[4]
    supports I2S2_WS:
      I2S2_WS.p => self.PI[0]
    supports I2S2_CK:
      I2S2_CK.p => self.PA[12]
    supports I2S2_WS:
      I2S2_WS.p => self.PA[11]
    supports I2S2_CK:
      I2S2_CK.p => self.PD[3]
    supports I2S2_SDI:
      I2S2_SDI.p => self.PI[2]
    supports I2S2_CK:
      I2S2_CK.p => self.PI[1]
    supports I2S2_CK:
      I2S2_CK.p => self.PA[9]
    supports I2S2_MCK:
      I2S2_MCK.p => self.PC[6]
    supports I2S2_SDI:
      I2S2_SDI.p => self.PC[2]
    supports I2S2_SDO:
      I2S2_SDO.p => self.PC[1]
    supports I2S2_CK:
      I2S2_CK.p => self.PB[13]
    supports I2S2_SDI:
      I2S2_SDI.p => self.PB[14]
    supports I2S2_SDO:
      I2S2_SDO.p => self.PB[15]
    supports I2S2_SDI:
      I2S2_SDI.p => self.PC_C[2]
    supports I2S2_SDO:
      I2S2_SDO.p => self.PC_C[3]
    supports I2S2_SDO:
      I2S2_SDO.p => self.PC[3]
    supports I2S2_WS:
      I2S2_WS.p => self.PB[12]
    supports I2S2_CK:
      I2S2_CK.p => self.PB[10]
    supports i2s([I2S-MCK, I2S-SDMI]):
      require mck-pin: I2S2_MCK
      require sdmi-pin: I2S2_SDI
      require sdmo-pin: I2S2_SDO
      require ck-pin: I2S2_CK
      require ws-pin: I2S2_WS
      i2s([I2S-MCK, I2S-SDMI]).mck => mck-pin.p
      i2s([I2S-MCK, I2S-SDMI]).sdmi => sdmi-pin.p
      i2s([I2S-MCK, I2S-SDMI]).sdmo => sdmo-pin.p
      i2s([I2S-MCK, I2S-SDMI]).ck => ck-pin.p
      i2s([I2S-MCK, I2S-SDMI]).ws => ws-pin.p

    pcb-bundle I2S3_MCK:
      pin p
    pcb-bundle I2S3_SDI:
      pin p
    pcb-bundle I2S3_SDO:
      pin p
    pcb-bundle I2S3_CK:
      pin p
    pcb-bundle I2S3_WS:
      pin p

    supports I2S3_CK:
      I2S3_CK.p => self.PC[10]
    supports I2S3_SDI:
      I2S3_SDI.p => self.PB[4]
    supports I2S3_SDO:
      I2S3_SDO.p => self.PD[6]
    supports I2S3_SDO:
      I2S3_SDO.p => self.PC[12]
    supports I2S3_CK:
      I2S3_CK.p => self.PB[3]
    supports I2S3_WS:
      I2S3_WS.p => self.PA[15]
    supports I2S3_SDI:
      I2S3_SDI.p => self.PC[11]
    supports I2S3_SDO:
      I2S3_SDO.p => self.PB[5]
    supports I2S3_MCK:
      I2S3_MCK.p => self.PC[7]
    supports I2S3_WS:
      I2S3_WS.p => self.PA[4]
    supports I2S3_SDO:
      I2S3_SDO.p => self.PB[2]
    supports i2s([I2S-MCK, I2S-SDMI]):
      require mck-pin: I2S3_MCK
      require sdmi-pin: I2S3_SDI
      require sdmo-pin: I2S3_SDO
      require ck-pin: I2S3_CK
      require ws-pin: I2S3_WS
      i2s([I2S-MCK, I2S-SDMI]).mck => mck-pin.p
      i2s([I2S-MCK, I2S-SDMI]).sdmi => sdmi-pin.p
      i2s([I2S-MCK, I2S-SDMI]).sdmo => sdmo-pin.p
      i2s([I2S-MCK, I2S-SDMI]).ck => ck-pin.p
      i2s([I2S-MCK, I2S-SDMI]).ws => ws-pin.p

    pcb-bundle I2S6_MCK:
      pin p
    pcb-bundle I2S6_SDI:
      pin p
    pcb-bundle I2S6_SDO:
      pin p
    pcb-bundle I2S6_CK:
      pin p
    pcb-bundle I2S6_WS:
      pin p

    supports I2S6_SDO:
      I2S6_SDO.p => self.PG[14]
    supports I2S6_SDI:
      I2S6_SDI.p => self.PB[4]
    supports I2S6_CK:
      I2S6_CK.p => self.PC[12]
    supports I2S6_CK:
      I2S6_CK.p => self.PB[3]
    supports I2S6_SDI:
      I2S6_SDI.p => self.PG[12]
    supports I2S6_WS:
      I2S6_WS.p => self.PA[15]
    supports I2S6_CK:
      I2S6_CK.p => self.PG[13]
    supports I2S6_SDO:
      I2S6_SDO.p => self.PB[5]
    supports I2S6_WS:
      I2S6_WS.p => self.PG[8]
    supports I2S6_WS:
      I2S6_WS.p => self.PA[4]
    supports I2S6_CK:
      I2S6_CK.p => self.PA[5]
    supports I2S6_WS:
      I2S6_WS.p => self.PA[0]
    supports I2S6_WS:
      I2S6_WS.p => self.PA_C[0]
    supports I2S6_SDI:
      I2S6_SDI.p => self.PA[6]
    supports I2S6_MCK:
      I2S6_MCK.p => self.PA[3]
    supports I2S6_SDO:
      I2S6_SDO.p => self.PA[7]
    supports i2s([I2S-MCK, I2S-SDMI]):
      require mck-pin: I2S6_MCK
      require sdmi-pin: I2S6_SDI
      require sdmo-pin: I2S6_SDO
      require ck-pin: I2S6_CK
      require ws-pin: I2S6_WS
      i2s([I2S-MCK, I2S-SDMI]).mck => mck-pin.p
      i2s([I2S-MCK, I2S-SDMI]).sdmi => sdmi-pin.p
      i2s([I2S-MCK, I2S-SDMI]).sdmo => sdmo-pin.p
      i2s([I2S-MCK, I2S-SDMI]).ck => ck-pin.p
      i2s([I2S-MCK, I2S-SDMI]).ws => ws-pin.p

    pcb-bundle RCC_OSC_IN:
      pin p
    pcb-bundle RCC_OSC_OUT:
      pin p

    supports RCC_OSC_IN:
      RCC_OSC_IN.p => self.PH[0]
    supports RCC_OSC_OUT:
      RCC_OSC_OUT.p => self.PH[1]
    supports high-freq-oscillator:
      require in-pin: RCC_OSC_IN
      require out-pin: RCC_OSC_OUT
      high-freq-oscillator.in => in-pin.p
      high-freq-oscillator.out => out-pin.p

    pcb-bundle RCC_OSC32_IN:
      pin p
    pcb-bundle RCC_OSC32_OUT:
      pin p

    supports RCC_OSC32_IN:
      RCC_OSC32_IN.p => self.PC[14]
    supports RCC_OSC32_OUT:
      RCC_OSC32_OUT.p => self.PC[15]
    supports low-freq-oscillator:
      require in-pin: RCC_OSC32_IN
      require out-pin: RCC_OSC32_OUT
      low-freq-oscillator.in => in-pin.p
      low-freq-oscillator.out => out-pin.p


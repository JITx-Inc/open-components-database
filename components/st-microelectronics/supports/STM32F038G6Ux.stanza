; Autogenerated by ocdb/scripts/cubemx-importer
; Family: STM32F0, Package: UFQFPN28
#use-added-syntax(jitx)
defpackage ocdb/components/st-microelectronics/supports/STM32F038G6Ux :
  import core
  import collections
  import jitx
  import jitx/commands
  import ocdb/utils/bundles
  import ocdb/utils/property-structs

public defn make-supports ():
  inside pcb-component:
    supports swd():
      swd().swdio  => self.PA[13]
      swd().swdclk => self.PA[14]

    supports gpio:
      gpio.gpio => self.PF[0]

    supports gpio:
      gpio.gpio => self.PF[1]

    supports gpio:
      gpio.gpio => self.PA[0]

    supports gpio:
      gpio.gpio => self.PA[1]

    supports gpio:
      gpio.gpio => self.PA[2]

    supports gpio:
      gpio.gpio => self.PA[3]

    supports gpio:
      gpio.gpio => self.PA[4]

    supports gpio:
      gpio.gpio => self.PA[5]

    supports gpio:
      gpio.gpio => self.PA[6]

    supports gpio:
      gpio.gpio => self.PA[7]

    supports gpio:
      gpio.gpio => self.PB[0]

    supports gpio:
      gpio.gpio => self.PA[8]

    supports gpio:
      gpio.gpio => self.PA[9]

    supports gpio:
      gpio.gpio => self.PA[10]

    supports gpio:
      gpio.gpio => self.PA[13]

    supports gpio:
      gpio.gpio => self.PA[14]

    supports gpio:
      gpio.gpio => self.PA[15]

    supports gpio:
      gpio.gpio => self.PB[3]

    supports gpio:
      gpio.gpio => self.PB[4]

    supports gpio:
      gpio.gpio => self.PB[5]

    supports gpio:
      gpio.gpio => self.PB[6]

    supports gpio:
      gpio.gpio => self.PB[7]

    supports adc:
      adc.adc => self.PA[0]

    supports adc:
      adc.adc => self.PA[1]

    supports adc:
      adc.adc => self.PA[2]

    supports adc:
      adc.adc => self.PA[3]

    supports adc:
      adc.adc => self.PA[4]

    supports adc:
      adc.adc => self.PA[5]

    supports adc:
      adc.adc => self.PA[6]

    supports adc:
      adc.adc => self.PA[7]

    supports adc:
      adc.adc => self.PB[0]

    pcb-bundle I2C1_SDA:
      pin p
    pcb-bundle I2C1_SCL:
      pin p

    supports I2C1_SCL:
      I2C1_SCL.p => self.PA[9]
    supports I2C1_SDA:
      I2C1_SDA.p => self.PA[10]
    supports I2C1_SCL:
      I2C1_SCL.p => self.PB[6]
    supports I2C1_SDA:
      I2C1_SDA.p => self.PB[7]
    supports i2c:
      require sda-pin: I2C1_SDA
      require scl-pin: I2C1_SCL
      i2c.sda => sda-pin.p
      i2c.scl => scl-pin.p

    pcb-bundle SPI1_MOSI:
      pin p
    pcb-bundle SPI1_MISO:
      pin p
    pcb-bundle SPI1_SCK:
      pin p
    pcb-bundle SPI1_NSS:
      pin p

    supports SPI1_NSS:
      SPI1_NSS.p => self.PA[4]
    supports SPI1_SCK:
      SPI1_SCK.p => self.PA[5]
    supports SPI1_MISO:
      SPI1_MISO.p => self.PA[6]
    supports SPI1_MOSI:
      SPI1_MOSI.p => self.PA[7]
    supports SPI1_NSS:
      SPI1_NSS.p => self.PA[15]
    supports SPI1_SCK:
      SPI1_SCK.p => self.PB[3]
    supports SPI1_MISO:
      SPI1_MISO.p => self.PB[4]
    supports SPI1_MOSI:
      SPI1_MOSI.p => self.PB[5]
    supports spi-controller():
      require sdo-pin: SPI1_MOSI
      require sdi-pin: SPI1_MISO
      require sck-pin: SPI1_SCK
      require cs-pin: SPI1_NSS
      spi-controller().cipo => sdo-pin.p
      spi-controller().copi => sdi-pin.p
      spi-controller().sck => sck-pin.p
      spi-controller().cs => cs-pin.p

    pcb-bundle USART1_TX:
      pin p
    pcb-bundle USART1_RX:
      pin p
    pcb-bundle USART1_CTS:
      pin p
    pcb-bundle USART1_RTS:
      pin p
    pcb-bundle USART1_DE:
      pin p

    supports USART1_CTS:
      USART1_CTS.p => self.PA[0]
    supports USART1_RTS:
      USART1_RTS.p => self.PA[1]
    supports USART1_DE:
      USART1_DE.p => self.PA[1]
    supports USART1_TX:
      USART1_TX.p => self.PA[2]
    supports USART1_RX:
      USART1_RX.p => self.PA[3]
    supports USART1_TX:
      USART1_TX.p => self.PA[9]
    supports USART1_RX:
      USART1_RX.p => self.PA[10]
    supports USART1_TX:
      USART1_TX.p => self.PA[14]
    supports USART1_RX:
      USART1_RX.p => self.PA[15]
    supports USART1_TX:
      USART1_TX.p => self.PB[6]
    supports USART1_RX:
      USART1_RX.p => self.PB[7]
    supports usart([UART-CTS, UART-RTS, UART-DE, UART-RX, UART-TX]):
      require tx-pin: USART1_TX
      require rx-pin: USART1_RX
      require cts-pin: USART1_CTS
      require rts-pin: USART1_RTS
      require de-pin: USART1_DE
      usart([UART-CTS, UART-RTS, UART-DE, UART-RX, UART-TX]).tx => tx-pin.p
      usart([UART-CTS, UART-RTS, UART-DE, UART-RX, UART-TX]).rx => rx-pin.p
      usart([UART-CTS, UART-RTS, UART-DE, UART-RX, UART-TX]).cts => cts-pin.p
      usart([UART-CTS, UART-RTS, UART-DE, UART-RX, UART-TX]).rts => rts-pin.p
      usart([UART-CTS, UART-RTS, UART-DE, UART-RX, UART-TX]).de => de-pin.p

    pcb-bundle I2S1_WS:
      pin p
    pcb-bundle I2S1_CK:
      pin p
    pcb-bundle I2S1_SDO:
      pin p

    supports I2S1_WS:
      I2S1_WS.p => self.PA[4]
    supports I2S1_CK:
      I2S1_CK.p => self.PA[5]
    supports I2S1_WS:
      I2S1_WS.p => self.PA[15]
    supports I2S1_CK:
      I2S1_CK.p => self.PB[3]
    supports i2s():
      require ws-pin: I2S1_WS
      require ck-pin: I2S1_CK
      require sdmo-pin: I2S1_SDO
      i2s().ws => ws-pin.p
      i2s().ck => ck-pin.p
      i2s().sdmo => sdmo-pin.p

    pcb-bundle RCC_OSC_IN:
      pin p
    pcb-bundle RCC_OSC_OUT:
      pin p

    supports RCC_OSC_IN:
      RCC_OSC_IN.p => self.PF[0]
    supports RCC_OSC_OUT:
      RCC_OSC_OUT.p => self.PF[1]
    supports high-freq-oscillator:
      require in-pin: RCC_OSC_IN
      require out-pin: RCC_OSC_OUT
      high-freq-oscillator.in => in-pin.p
      high-freq-oscillator.out => out-pin.p


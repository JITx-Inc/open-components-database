#use-added-syntax(jitx)
defpackage ocdb/components/te-connectivity/2102771-1:
  import core
  import collections
  import math
  import jitx
  import jitx/commands
  import ocdb/utils/defaults
  import ocdb/utils/landpatterns
  import ocdb/utils/generator-utils
  import ocdb/utils/generic-components
  import ocdb/utils/bundles
  import ocdb/utils/symbols
  import ocdb/utils/box-symbol
  import ocdb/utils/property-structs

public pcb-component component :
  name = "2102771-1"
  manufacturer = "TE"
  mpn = "2102771-1"

  defn pin-name (r:Int, c:Int) :
    val letter = red-alph-letter(r)
    Ref(letter)[c + 1]
  pin-properties :
    [pin:Ref | pads:Ref ... | side:Dir | bank:Int]
    for c in 0 to 16 do :
      for r in 0 to 7 do :
        [(pin-name(r, c)) | (pin-name(r, c)) | Right | c]
  reference-prefix = "P"
  make-box-symbol()
  assign-landpattern(te-2102771-1-pkg)
  property(self.rated-temperature) = min-max(-55.0, 105.0)

pcb-landpattern te-2102771-1-pkg :

  defn make-pad (r:Int, c:Int) :
    val x = ((to-double(16) - 1.0) / -2.0 + to-double(c)) * -1.8
    val y = ((to-double(7) - 1.0) / 2.0 - to-double(r)) * -1.35
    val letter = red-alph-letter(r)
    val name = Ref(letter)[c + 1]
  
    ;fab-note : "PLATED THROUGH HOLE PER TE 114-13056, FIGURE 4"
    pad (name) : pth-pad(0.55 / 2.0, 0.92 / 2.0) at loc(x, y)

  for c in 0 to 16 do :
    for r in 0 to 7 do :
      make-pad(r, c)

  val post = Circle(0.56 / 2.0)
  layer(Cutout()) = loc(7.5 * 1.8, 4.0 * 1.35) * post
  layer(Cutout()) = loc(3.5 * 1.8, 4.0 * 1.35) * post
  layer(Cutout()) = loc(-0.5 * 1.8, 4.0 * 1.35) * post
  layer(Cutout()) = loc(-4.5 * 1.8, 4.0 * 1.35) * post

  layer(Courtyard(Top)) = Rectangle(28.68, 11.81)
  layer(Silkscreen("f-silk", Top)) = LineRectangle(28.68, 11.81)
  layer(BoardEdge()) = Line(0.0, [Point(1.0, -3.0 * 1.35 - 1.5), Point(-1.0, -3.0 * 1.35 - 1.5)])
  ref-label()

public pcb-module module :
  inst c : component

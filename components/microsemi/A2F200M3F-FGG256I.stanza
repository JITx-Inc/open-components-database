#use-added-syntax(jitx)
defpackage ocdb/components/microsemi/A2F200M3F-FGG256I:
  import core
  import collections
  import math
  import jitx
  import jitx/commands
  import ocdb/utils/defaults
  import ocdb/utils/landpatterns
  import ocdb/utils/generator-utils
  import ocdb/utils/generic-components
  import ocdb/utils/bundles
  import ocdb/utils/symbols
  import ocdb/utils/box-symbol
  import ocdb/utils/property-structs

pcb-bundle fpga-io :
  pin io

public pcb-component component :
  name = "A2F200M3F-FGG256I"
  manufacturer = "Microsemi"
  mpn = "A2F200M3F-FGG256I"
  description = "FPGA SmartFusion"
  pin-properties :
    [pin:Ref | pads:Ref ...   | side:Dir | bank:Ref ]
    [GND | A[1] A[5] A[9] A[12] A[16] B[2] B[15] C[7] C[13] D[3] E[6] E[8] E[10] F[2] F[7] F[9] F[11]
           F[15] G[6] G[8] G[10] H[1] H[7] H[9] H[11] H[16] J[6] J[8] J[10] K[7] K[9] K[11] K[13] L[1]
           L[6] L[8] L[10] L[16] M[4] N[15] | Down | supply ]
    [GNDQ    | B[16] D[4] D[12] E[5] F[13] J[5] | Down | supply] 
    [GNDENVM | G[16]  | Down | supply] 
    [VPP | G[12] | Up | supply ]
    [VCCENVM | F[16] | Up | supply ]
    [VCC | F[8]  F[10] G[7] G[9] H[8] H[10] J[7] J[9] K[8] K[10] L[7] L[9] | Up | supply]
    [PU_N        | T[16] | Right | supply] 
    [MSS_RESET_N | K[4]  | Right | supply] 
    [VCC33SDD0 | P[2]   | Up    | analog]   
    [VCC33SDD1 | N[14]  | Up    | analog]   
    [VCC15ADC0 | P[8]   | Up    | analog]   
    [VCC15ADC1 | R[8]   | Up    | analog]   
    [VCC33ADC0 | R[7]   | Up    | analog]   
    [VCC33ADC1 | N[8]   | Up    | analog]   
    [VCC33A    | R[16]  | Up    | analog]   
    [VCC15A    | N[3]   | Up    | analog]   
    [VCC33N    | P[3]   | Up    | analog]   
    [VCC33AP   | N[4]   | Up    | analog]   
    [VAREFOUT  | N[12]  | Right | analog] 
    [VAREF0    | T[6]   | Right | analog] 
    [VAREF1    | T[9]   | Right | analog] 
    [SDD0      | R[2]   | Right | analog] 
    [SDD1      | T[12]  | Right | analog] 
    [ADC[0]    | T[5]   | Left | analog] 
    [ADC[1]    | R[6]   | Left | analog] 
    [ADC[2]    | P[7]   | Left | analog] 
    [ADC[3]    | M[5]   | Left | analog] 
    [ADC[4]    | M[9]   | Left | analog] 
    [ADC[5]    | N[9]   | Left | analog] 
    [ADC[6]    | P[9]   | Left | analog] 
    [ADC[7]    | R[9]   | Left | analog] 
    [CM[0]     | T[3]   | Right | analog] 
    [CM[1]     | P[6]   | Right | analog] 
    [CM[2]     | M[12]  | Right | analog] 
    [CM[3]     | N[10]  | Right | analog] 
    [TM[0]     | R[4]   | Right | analog] 
    [TM[1]     | N[6]   | Right | analog] 
    [TM[2]     | M[11]  | Right | analog] 
    [TM[3]     | P[10]  | Right | analog] 
    [ABPS[0]   | R[3]   | Right | analog]
    [ABPS[1]   | T[2]   | Right | analog]
    [ABPS[2]   | R[5]   | Right | analog]
    [ABPS[3]   | N[5]   | Right | analog]
    [ABPS[4]   | R[11]  | Right | analog]
    [ABPS[5]   | T[11]  | Right | analog]
    [ABPS[6]   | T[10]  | Right | analog]
    [ABPS[7]   | R[10]  | Right | analog]
    [PCAP      | R[1]   | Right | analog] 
    [NCAP      | T[1]   | Right | analog] 
    [PTEM      | P[15]  | Right | analog] 
    [PTBASE    | P[16]  | Right | analog] 
    [GND15ADC0 | M[6]       | Down | analog]  
    [GND15ADC1 | T[8]       | Down | analog]  
    [GND33ADC1 | M[7] M[8]  | Down | analog]  
    [GND33ADC0 | T[7] N[7]  | Down | analog]  
    [GNDA      | P[4] P[11] | Down | analog]  
    [GNDAQ     | P[5] N[11] | Down | analog]  
    [GNDTM0    | T[4]       | Down | analog]  
    [GNDTM1    | M[10]      | Down | analog]  
    [GNDSDD1   | N[13]      | Down | analog]  
    [GNDSDD0   | P[1]       | Down | analog]  
    [GNDVAREF  | T[13]      | Down | analog]
    [VDDBAT      | P[14] | Up | osc]
    [VCCRCOSC    | K[5]  | Up | osc]
    [VCCLPXTAL   | T[15] | Up | osc]
    [VCCMAINXTAL | P[12] | Up | osc]
    [VCOMPLA     | D[2]  | Up | osc]  
    [VCCPLL      | C[2]  | Up | osc]  
    [LPXIN       | R[14] | Right | osc]
    [LPXOUT      | R[15] | Right | osc]
    [MAINXIN     | R[12] | Right | osc]
    [MAINXOUT    | R[13] | Right | osc]
    [GNDRCOSC    | J[4]  | Down | osc]
    [GNDLPXTAL   | P[13] | Down | osc]
    [GNDMAINXTAL | T[14] | Down | osc]
    [VJTAG       | H[12] | Up | jtag]
    [JTAGSEL     | H[15] | Right | jtag]
    [TRSTB       | G[13] | Right | jtag]
    [TMS         | G[14] | Right | jtag]
    [TCK         | G[15] | Right | jtag]
    [TDO         | H[13] | Right | jtag]
    [TDI         | H[14] | Right | jtag]
    [VCCFPGAIOB[1] | D[16] E[13] G[11] | Up | bank[0] ]
    [IO00NDB0V0-GAA0-EMC_CLK      | D[5]  | Right | bank[0]]
    [IO00PDB0V0-GAA1-EMC_RW_N     | D[6]  | Right | bank[0]]
    [IO01NDB0V0-GAB0-EMC_CS0_N    | C[5]  | Right | bank[0]]
    [IO01PDB0V0-GAB1-EMC_CS1_N    | C[6]  | Right | bank[0]]
    [IO02NDB0V0-GAC0-EMC_BYTEN[0] | C[3]  | Right | bank[0]]
    [IO02PDB0V0-GAC1-EMC_BYTEN[1] | B[3]  | Right | bank[0]]
    [IO03NDB0V0-EMC_OEN0_N        | B[4]  | Right | bank[0]]
    [IO03PDB0V0-EMC_OEN1_N        | B[5]  | Right | bank[0]]
    [IO04NDB0V0-EMC_AB[0]         | A[3]  | Right | bank[0]]
    [IO04PDB0V0-EMC_AB[1]         | A[4]  | Right | bank[0]]
    [IO05NDB0V0-EMC_AB[2]         | B[6]  | Right | bank[0]]
    [IO05PDB0V0-EMC_AB[3]         | A[6]  | Right | bank[0]]
    [IO06NDB0V0-EMC_AB[4]         | B[7]  | Right | bank[0]]
    [IO06PDB0V0-EMC_AB[5]         | A[7]  | Right | bank[0]]
    [IO07NDB0V0-EMC_AB[6]         | D[7]  | Right | bank[0]]
    [IO07PDB0V0-EMC_AB[7]         | D[8]  | Right | bank[0]]
    [IO08NDB0V0-EMC_AB[8]         | C[8]  | Right | bank[0]]
    [IO08PDB0V0-EMC_AB[9]         | B[8]  | Right | bank[0]]
    [IO09NDB0V0-EMC_AB[10]        | D[9]  | Right | bank[0]]
    [IO09PDB0V0-EMC_AB[11]        | C[9]  | Right | bank[0]]
    [IO10NDB0V0-EMC_AB[12]        | B[9]  | Right | bank[0]]
    [IO10PDB0V0-EMC_AB[13]        | B[10] | Right | bank[0]]
    [IO11NDB0V0-EMC_AB[14]        | A[10] | Right | bank[0]]
    [IO11PDB0V0-EMC_AB[15]        | A[11] | Right | bank[0]]
    [IO12NDB0V0-EMC_AB[16]        | B[11] | Right | bank[0]]
    [IO12PDB0V0-EMC_AB[17]        | C[11] | Right | bank[0]]
    [IO13NDB0V0-EMC_AB[18]        | B[12] | Right | bank[0]]
    [IO13PDB0V0-EMC_AB[19]        | C[12] | Right | bank[0]]
    [IO14NDB0V0-EMC_AB[20]        | A[13] | Right | bank[0]]
    [IO14PDB0V0-EMC_AB[21]        | B[13] | Right | bank[0]]
    [IO15NDB0V0-EMC_AB[22]        | D[10] | Right | bank[0]]
    [IO15PDB0V0-EMC_AB[23]        | D[11] | Right | bank[0]]
    [IO16NDB0V0-EMC_AB[24]        | A[14] | Right | bank[0]]
    [IO16PDB0V0-EMC_AB[25]        | B[14] | Right | bank[0]]
    [VCCFPGAIOB[0] | A[2] A[8] A[15] C[4] C[10] E[7] E[9] E[11] | Up | bank[1]]
    [IO20NPB1V0-GBB2 | D[13] | Right | bank[1]]
    [IO20PPB1V0-GBA2 | C[14] | Right | bank[1]]
    [IO23NDB1V0      | C[16] | Right | bank[1]]
    [IO23PDB1V0-GCA2 | C[15] | Right | bank[1]]
    [IO24NDB1V0      | D[15] | Right | bank[1]]
    [IO24PDB1V0-GCB2 | D[14] | Right | bank[1]]
    [IO27NDB1V0-GCB0 | F[14] | Right | bank[1]]
    [IO27PDB1V0-GCB1 | E[14] | Right | bank[1]]
    [IO28NDB1V0-GCA0 | F[12] | Right | bank[1]]
    [IO28PDB1V0-GCA1 | E[12] | Right | bank[1]]
    [IO29NDB1V0-GDC0 | E[16] | Right | bank[1]]
    [IO29PDB1V0-GDC1 | E[15] | Right | bank[1]]
    [VCCMSSIOB[4] | K[3] N[2] K[6] | Up | bank[4]]
    [MAC_CLK               | L[5] | Right | bank[4]] 
    [IO48RSB4V0-MAC_MDC    | K[2] | Right | bank[4]] 
    [IO49RSB4V0-MAC_MDIO   | K[1] | Right | bank[4]] 
    [IO50RSB4V0-MAC_RXER   | L[4] | Right | bank[4]] 
    [IO51RSB4V0-MAC_CRSDV  | L[3] | Right | bank[4]] 
    [IO52RSB4V0-MAC_TXEN   | L[2] | Right | bank[4]] 
    [IO53RSB4V0-MAC_RXD[1] | N[1] | Right | bank[4]] 
    [IO54RSB4V0-MAC_RXD[0] | M[3] | Right | bank[4]] 
    [IO55RSB4V0-MAC_TXD[1] | M[2] | Right | bank[4]] 
    [IO56RSB4V0-MAC_TXD[0] | M[1] | Right | bank[4]] 
    [VCCFPGAIOB[5] | D[1] F[4] F[6] H[3] H[6] | Up | bank[5]]
    [IO59NDB5V0-GEA2-EMC_DB[0]  | H[5] | Right | bank[5]]
    [IO59PDB5V0-GEB2-EMC_DB[1]  | H[4] | Right | bank[5]]
    [IO60NDB5V0-EMC_DB[2]       | J[3] | Right | bank[5]]
    [IO60PDB5V0-GEC2-EMC_DB[3]  | J[2] | Right | bank[5]]
    [IO61NPB5V0-GEA0-EMC_DB[4]  | J[1] | Right | bank[5]]
    [IO61PPB5V0-GEA1-EMC_DB[5]  | H[2] | Right | bank[5]]
    [IO62NDB5V0-GEB0-EMC_DB[6]  | G[3] | Right | bank[5]]
    [IO62PDB5V0-GEB1-EMC_DB[7]  | G[2] | Right | bank[5]]
    [IO63NDB5V0-GEC0-EMC_DB[8]  | G[1] | Right | bank[5]]
    [IO63PDB5V0-GEC1-EMC_DB[9]  | F[1] | Right | bank[5]]
    [IO67NDB5V0                 | G[5] | Right | bank[5]]
    [IO67PDB5V0-GFC2            | G[4] | Right | bank[5]]
    [IO68NDB5V0-GFB2            | F[3] | Right | bank[5]]
    [IO68PDB5V0-GFA2            | E[3] | Right | bank[5]]
    [IO69NPB5V0-EMC_DB[10]      | E[4] | Right | bank[5]]
    [IO69PPB5V0-EMC_DB[11]      | F[5] | Right | bank[5]]
    [IO70NDB5V0-EMC_DB[12]      | E[2] | Right | bank[5]]
    [IO70PDB5V0-GAC2-EMC_DB[13] | E[1] | Right | bank[5]]
    [IO71NDB5V0-GAB2-EMC_DB[14] | C[1] | Right | bank[5]]
    [IO71PDB5V0-GAA2-EMC_DB[15] | B[1] | Right | bank[5]]
    [VCCMSSIOB[2] | J[11] J[15] L[11] M[14] | Up | gpio]
    [I2C_0_SCL-GPIO[23]  | J[12] | Right | gpio]
    [I2C_0_SDA-GPIO[22]  | J[13] | Right | gpio]
    [I2C_1_SCL-GPIO[31]  | J[14] | Right | gpio]
    [I2C_1_SDA-GPIO[30]  | J[16] | Right | gpio]
    [UART_0_RXD-GPIO[21] | K[12] | Right | gpio]
    [UART_1_TXD-GPIO[28] | K[14] | Right | gpio]
    [UART_1_RXD-GPIO[29] | K[15] | Right | gpio]
    [UART_0_TXD-GPIO[20] | K[16] | Right | gpio]
    [SPI_1_DO-GPIO[24]   | L[12] | Right | gpio]
    [SPI_1_SS-GPIO[27]   | L[13] | Right | gpio]
    [SPI_1_CLK-GPIO[26]  | L[14] | Right | gpio]
    [SPI_1_DI-GPIO[25]   | L[15] | Right | gpio]
    [SPI_0_SS-GPIO[19]   | M[13] | Right | gpio]
    [SPI_0_CLK-GPIO[18]  | M[15] | Right | gpio]
    [SPI_0_DI-GPIO[17]   | M[16] | Right | gpio]
    [SPI_0_DO-GPIO[16]   | N[16] | Right | gpio]

  assign-landpattern(bga-pkg(1.0, 0.4, [16, 16], [17.0 17.0], []))
  make-box-symbol()

  supports i2c : 
    i2c.sda => self.I2C_0_SDA-GPIO[22]
    i2c.scl => self.I2C_0_SCL-GPIO[23]
  supports i2c : 
    i2c.sda => self.I2C_1_SDA-GPIO[30] 
    i2c.scl => self.I2C_1_SCL-GPIO[31]

  val spi = spi-controller()
  supports spi : 
    spi.copi => self.SPI_1_DO-GPIO[24] 
    spi.cs   => self.SPI_1_SS-GPIO[27] 
    spi.sck  => self.SPI_1_CLK-GPIO[26]
    spi.cipo => self.SPI_1_DI-GPIO[25]
  
  supports spi : 
    spi.copi => self.SPI_0_DO-GPIO[16] 
    spi.cs   => self.SPI_0_SS-GPIO[19] 
    spi.sck  => self.SPI_0_CLK-GPIO[18]
    spi.cipo => self.SPI_0_DI-GPIO[17] 

  supports reset :
    reset.reset => self.MSS_RESET_N

  val jtag = jtag()
  supports jtag :
    jtag.trstn => self.TRSTB 
    jtag.tms => self.TMS   
    jtag.tck => self.TCK   
    jtag.tdo => self.TDO   
    jtag.tdi => self.TDI   

  defn assign-se (p:JITXObject) :
    supports fpga-io :
      fpga-io.io => p
      ; apply-digital-io-params(p, 0.7, 1.7, 0.7, 1.7)
      ; apply-voltage-rating-params(p, [-0.3 3.6])
  defn assign-diff (p:JITXObject, np:JITXObject) :
    supports fpga-diff :
      fpga-diff.N => np
      fpga-diff.P => p
      ; apply-lvds-params(p, 0.9, 1.25, [0.25 0.350 0.450], [1.125 1.250 1.375], [0.100 0.350 0.600], [0.05 1.25 2.35])
      ; apply-voltage-rating-params(p, [0.0 2.925])
  for apin in pins(self) do :
    val s = to-string(ref(apin))
    if prefix?(s, "IO") :
      val n = length(s)
      val is-p? = (n > 4) and s[4] == 'P'
      val has-d? = (n > 5) and s[5] == 'D'
      val has-p? = (n > 5) and s[5] == 'P'
      if (has-d? or has-p?) and (is-p?) :
        val hyphen = index-of-char(s, '-')
        val first-part = 
          if hyphen is Int : s[0 to (hyphen as Int)]
          else : s
        val twin-part = replace-at(first-part, 4, 'N')
        val twin-port = for p in pins(self) find! :
          prefix?(to-string(ref(p)), twin-part)
        assign-diff(apin, twin-port)
      assign-se(apin)

  for p in [self.VCC self.VCC15A self.VCC15ADC0 self.VCC15ADC1] do :
    property(p.power-pin) = PowerPin(min-typ-max(1.425, 1.5, 1.575))
  for p in [self.VPP self.VCC33A self.VCC33ADC0 self.VCC33ADC1 self.VCC33AP self.VCC33SDD0 self.VCC33SDD1 self.VCCMAINXTAL self.VCCLPXTAL] do :
    property(p.power-pin) = PowerPin(min-typ-max(3.15, 3.3, 3.45))
  for p in [self.VCCFPGAIOB[1] self.VCCFPGAIOB[0] self.VCCMSSIOB[4] self.VCCFPGAIOB[5] self.VCCMSSIOB[2]] do :
    property(p.power-pin) = PowerPin(min-max(1.425, 3.6))

  
  property(self.rated-temperature) = min-max(-40.0, 100.0)

defn replace-at (s:String, p:Int, c:Char) :
  String $ for i in 0 to length(s) seq :
    if i == p : c
    else : s[i]

public pcb-module module :
  port src-1V5 : power
  port src-3V3 : power
  port src-io : power
  port sys-i2c : i2c[2]
  inst fpga : ocdb/components/microsemi/A2F200M3F-FGG256I/component
  pin gnd 
  net (gnd src-1V5.gnd, src-3V3.gnd, src-io.gnd)
  for p in pins(fpga) do :
    val pin-name = to-string(ref(p))
    if substring?(pin-name, "GND") : net (gnd, p)
    for n in ["VCCFPGAIOB" "VCCMSSIOB"] do : if substring?(pin-name, n) : net (src-io.vdd, p)
    for n in ["VCC15A" "VCC15ADC"] do : if substring?(pin-name, n) : net (src-1V5.vdd, p, fpga.VCC)
    for n in ["VPP" "VCC33A" "VCC33ADC" "VCC33AP" "VCC33SDD" "VCCMAINXTAL" "VCCLPXTAL"] do : if substring?(pin-name, n) : net (src-3V3.vdd, p)
  
  property(fpga.VCCFPGAIOB[0].power-request) = [1.8 0.1 5.0e-5]
  property(fpga.VCCFPGAIOB[0].gnd-ref) = fpga.GND
  property(fpga.VCC15A.power-request) = [1.5 0.7 5.0e-2]
  property(fpga.VCC15A.gnd-ref) = fpga.GND
  property(fpga.VPP.power-request) = [3.3 0.05 5.0e-2]
  property(fpga.VPP.gnd-ref) = fpga.GND

  for cap-count in [[47.0e-6, 1], [4.7e-6, 2]] do:
    val [capacitance, count]:[Double, Int] = cap-count
    for n in 0 to count do:
      bypass-cap-strap(src-3V3.vdd, gnd, capacitance)
      bypass-cap-strap(src-1V5.vdd, gnd, capacitance)

  for cap-count in [[47.0e-6 1] [4.7e-6 2] [0.47e-6 4]] do:
    val [capacitance, count]:[Double, Int] = cap-count
    for n in 0 to count do:
      bypass-cap-strap(src-io.vdd, gnd, capacitance)


  net (sys-i2c[0].sda, fpga.I2C_0_SDA-GPIO[22])
  net (sys-i2c[0].scl, fpga.I2C_0_SCL-GPIO[23])
  net (sys-i2c[1].sda, fpga.I2C_1_SDA-GPIO[30])
  net (sys-i2c[1].scl, fpga.I2C_1_SCL-GPIO[31])

  for i in 0 to 70 do :
    supports gpio :
      require p:fpga-io from fpga
      gpio.gpio => p.io
  supports reset :
    require r:reset from fpga
    reset.reset => r.reset
  for i in 0 to 30 do :
    supports lvds :
      require d:fpga-diff from fpga
      lvds.N => d.N
      lvds.P => d.P
  for i in 0 to 10 do :
    supports i2c :
      require d:fpga-io[2] from fpga
      i2c.sda => d[0].io
      i2c.scl => d[1].io
  for i in 0 to 5 do :
    supports rgmii : 
      require pins:fpga-io[12] from fpga
      rgmii.txd[0] => pins[0].io
      rgmii.txd[1] => pins[1].io
      rgmii.txd[2] => pins[2].io
      rgmii.txd[3] => pins[3].io
      rgmii.rxd[0] => pins[4].io
      rgmii.rxd[1] => pins[5].io
      rgmii.rxd[2] => pins[6].io
      rgmii.rxd[3] => pins[7].io
      rgmii.tx-clk => pins[8].io
      rgmii.tx-ctrl => pins[9].io
      rgmii.rx-clk => pins[10].io
      rgmii.rx-ctrl => pins[11].io

  
  schematic-group(self) = fpga
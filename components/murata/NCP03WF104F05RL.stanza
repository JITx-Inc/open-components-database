#use-added-syntax(jitx)
defpackage ocdb/components/murata/NCP03WF104F05RL :
  import core
  import collections
  import math
  import jitx
  import jitx/commands
  import ocdb/utils/defaults

  import ocdb/utils/landpatterns
  import ocdb/utils/symbols
  import ocdb/utils/box-symbol
  import ocdb/utils/bundles
  import ocdb/utils/generator-utils
  import ocdb/utils/generic-components
  import ocdb/utils/property-structs

public pcb-component component : 
  manufacturer = "Murata"
  description = "THERM NTC 100KOHM 4250K 0201"
  mpn = "NCP03WF104F05RL"

  port p : pin[[1 2]]

  val sym = resistor-sym(ResistorTherm)
  symbol = sym(p[1] => sym.p[1], p[2] => sym.p[2])
  val pkg = ipc-two-pin-landpattern("0201")
  landpattern = pkg(p[1] => pkg.p[1], p[2] => pkg.p[2])

  property(self.rated-voltage) = 5.0

  property(self.nominal-resistance) = 100.0e3 ; ohms @ nominal-temperature
  property(self.nominal-temperature) = 25 ; in C degrees

  property(self.rt-curve) = [[-40.0 3000000.0] [0.0 350000.0] [25.0 100000.0] [50.0 33000.0] [100.0 5500.0] [125.0 2600.0]] ; PWL temperature/resistance pairs
  property(self.temp-error) = [[-40.0 0.6] [25.0 0.2] [125.0 1.6]] ; PWL temperature error in degrees C versus temperature

  property(self.rated-temperature) = min-max(-40.0, 125.0)

public pcb-module module :
  public inst i : component

;
; inst ntc : ocdb/components/murata/NCP03WF104F05RL
; to calculate the resistance of the thermistor at a given temperature:
; val res = PWL(property(ntc.i.rt-curve))[temperature]
; to calculate the temperature error band at an operating temperature:
; assuming that you need the toleranced value
; val err =  PWL(property(ntc.i.temp-error))[temperature]
; val temperr = min-max(-1.0 * err, 1.0 * err)
;
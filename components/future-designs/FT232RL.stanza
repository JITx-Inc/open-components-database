#use-added-syntax(jitx)
defpackage ocdb/components/future-designs/FT232RL :
  import core
  import collections
  import math
  import jitx
  import jitx/commands

  import ocdb/utils/defaults
  import ocdb/utils/landpatterns
  import ocdb/utils/symbols
  import ocdb/utils/symbol-utils
  import ocdb/utils/generic-components

  import ocdb/utils/bundles
  import ocdb/utils/box-symbol
  import ocdb/utils/property-structs
  import ocdb/utils/generator-utils
  import ocdb/utils/checks

public pcb-component component:
  pin VCC
  pin TEST
  pin GND
  pin VCCIO
  pin p3V3OUT
  pin RXD
  pin TXD
  pin nRI
  pin OSCI
  pin OSCO
  pin nCTS
  pin nDCD
  pin nDSR
  pin nDTR
  pin nRTS
  port CBUS : pin[5]

  pin-properties :
    [pin:Ref | pads:Int ... | side:Dir | generic-pin:GenericPin]
    [GND     | 7 18 21      | Down     | -]
    [AGND    | 25           | Down     | -]
    [TEST    | 26           | Down     | GenericPin(min-max(-0.5, 6.0), 0.0)]
    [USBDM   | 16           | Left     | GenericPin(min-max(-0.5, 3.8), 0.0)]
    [USBDP   | 15           | Left     | GenericPin(min-max(-0.5, 3.8), 0.0)]
    [RXD     | 5            | Right    | GenericPin(min-max(-0.5, 5.5), 0.0)]
    [TXD     | 1            | Right    | GenericPin(min-max(-0.5, 5.5), 0.0)]
    [VCC     | 20           | Up       | GenericPin(min-max(-0.5, 5.5), 0.0)]
    [nRI     | 6            | Right    | GenericPin(min-max(-0.5, 5.5), 0.0)]
    [OSCI    | 27           | Left     | GenericPin(min-max(-0.5, 5.5), 0.0)]
    [OSCO    | 28           | Left     | GenericPin(min-max(-0.5, 5.5), 0.0)]
    [nCTS    | 11           | Right    | GenericPin(min-max(-0.5, 5.5), 0.0)]
    [nDCD    | 10           | Right    | GenericPin(min-max(-0.5, 5.5), 0.0)]
    [nDSR    | 9            | Right    | GenericPin(min-max(-0.5, 5.5), 0.0)]
    [nDTR    | 2            | Right    | GenericPin(min-max(-0.5, 5.5), 0.0)]
    [nRTS    | 3            | Right    | GenericPin(min-max(-0.5, 5.5), 0.0)]
    [CBUS[0] | 23           | Right    | GenericPin(min-max(-0.5, 5.5), 0.0)]
    [CBUS[1] | 22           | Right    | GenericPin(min-max(-0.5, 5.5), 0.0)]
    [CBUS[2] | 13           | Right    | GenericPin(min-max(-0.5, 5.5), 0.0)]
    [CBUS[3] | 14           | Right    | GenericPin(min-max(-0.5, 5.5), 0.0)]
    [CBUS[4] | 12           | Right    | GenericPin(min-max(-0.5, 5.5), 0.0)]
    [VCCIO   | 4            | Up       | GenericPin(min-max(-0.5, 5.5), 0.0)]
    [nc[0]   | 8            | Down     | -]
    [nc[1]   | 24           | Down     | -]
    [nRESET  | 19           | Left     | GenericPin(min-max(-0.5, 5.5), 0.0)]
    [p3V3OUT | 17           | Left     | GenericPin(min-max(-0.5, 5.5), 0.0)]

  make-box-symbol()
  assign-landpattern(sop65-landpattern(28, 7.8))
  property(VCC.power-pin) = PowerPin(min-max(4.0, 5.25))
  property(VCCIO.power-pin) = PowerPin(min-max(1.8, 5.25))
  property(p3V3OUT.power-supply-pin) = PowerSupplyPin(typ(3.3), 0.05)

  ; Datasheet gives data in tables, so use piecewise linear model to find value
  val voh = PWLVoltage(
    PWL([[1.8, 1.32] [2.8, 2.1] [3.3, 2.2] [5.0, 3.2]]) ; min
    PWL([[1.8, 1.8]  [2.8, 2.8] [3.3, 3.2] [5.0, 4.9]]) ; max
    self.VCCIO)
  
  val vol = PWLVoltage(
    PWL([[1.8, 0.18] [2.8, 0.5] [3.3, 0.5] [5.0, 0.6]]), ; min
    PWL([[1.8, 0.06] [2.8, 0.3] [3.3, 0.3] [5.0, 0.3]]), ; max
    self.VCCIO)

  val vih = typ(1.5)
  val vil = FractionalVoltage(0.3, self.VCCIO)

  val drive-props = DigitalOutput(CMOSOutput(vol, voh), false, VCCIO, GND)
  val input-props = DigitalInput(vil, vih, VCCIO, GND, 1.0e-6) ; TODO: Leakage current is a guess
  
  property(TXD.digital-output)  = drive-props
  property(nDTR.digital-output) = drive-props
  property(nRTS.digital-output) = drive-props
  property(RXD.digital-input)   = input-props
  property(nRI.digital-input)   = input-props
  property(nDSR.digital-input)  = input-props
  property(nDCD.digital-input)  = input-props
  property(nCTS.digital-input)  = input-props

  for p in pins(CBUS) do :
    property(p.digital-io) = DigitalIO(
      CMOSOutput(vol, voh), 
      vil, vih, VCCIO, GND, 1.0e-6)

  ; Test pin must be connected to GND for device operation
  check connected([TEST GND])
  check connected(VCCIO)

  name = "FT232"
  description = "FTDI USB to UART"
  datasheet = "http://www.ftdichip.com/Documents/DataSheets/DS_FT232R_v104.pdf"
  reference-prefix = "U"
  mpn = "FT232RL-REEL"
  manufacturer = "Future Designs"

public pcb-module module :
  port usb-2 : usb-2
  port uart : uart([UART-DTR UART-RTS UART-RX UART-TX])
  pin vccio
  pin gnd
  
  public inst xcvr : ocdb/components/future-designs/FT232RL/component
  net (usb-2.vbus.vdd xcvr.VCC)
  net (xcvr.VCCIO vccio)
  net (usb-2.vbus.gnd xcvr.GND xcvr.AGND gnd)
  net (usb-2.data.P xcvr.USBDP)
  net (usb-2.data.N xcvr.USBDM)
  bypass-cap-strap(xcvr.p3V3OUT, gnd, 0.1e-6)
  bypass-cap-strap(xcvr.VCC, gnd, 4.7e-6)
  bypass-cap-strap(xcvr.VCC, gnd, 0.1e-6)

  net TX (uart.tx xcvr.TXD)
  net RX (uart.rx xcvr.RXD)
  net RTS (uart.rts xcvr.nRTS)
  net DTR (uart.dtr xcvr.nDTR)

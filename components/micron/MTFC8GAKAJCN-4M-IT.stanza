#use-added-syntax(esir)
defpackage ocdb/micron/MTFC8GAKAJCN-4M-IT:
  import core
  import collections
  import math
  import esir
  import esir/utils
  import esir/gen
  import ocdb/tests/default-harness

  import ocdb/land-patterns
  import ocdb/symbols
  import ocdb/box-symbol
  import ocdb/pinspec
  import ocdb/bundles
  import ocdb/generator-utils
  import ocdb/generic-components


public pcb-bundle emmc-data :
    port d : pin[8]
    pin clk 
    pin cmd 

public pcb-bundle emmc-pwr :
    port vcc : pin[4]
    port vccq : pin[5]
    port vss : pin[6]
    port vssq : pin[5]

public pcb-bundle emmc :
    port dat : emmc-data
    port pwr : emmc-pwr

public unique pcb-component component :
  manufacturer = "Micron"
  mpn = "MTFC8GAKAJCN-4M-IT"
  description = "FLASH - NAND Memory IC 64Gb (8G x 8) MMC 153-VFBGA (11.5x13)" 
  port dat : emmc-data
  port pwr : emmc-pwr
  pin nRESET
  pin DS                    ;data-strobe for HS400 mode
  pin VDDIM                 ;internal voltage node - no not connect
  for i in 0 to 109 do :
    pin NC[i]
  for i in 0 to 11 do :
    pin RFU[i]              ;reserved for future use - do not connect

  val ps = PinSpec $ #TABLE :
    [Ref    | Ref ...  | Dir  ]
    [nRESET      |  K[5]    |  Left ]
    [dat.clk     |  M[6]    |  Left ]
    [dat.cmd     |  M[5]    |  Left ]
    [dat.d[0]    |  A[3]    |  Left ]
    [dat.d[1]    |  A[4]    |  Left ]
    [dat.d[2]    |  A[5]    |  Left ]
    [dat.d[3]    |  B[2]    |  Left ]
    [dat.d[4]    |  B[3]    |  Left ]
    [dat.d[5]    |  B[4]    |  Left ]
    [dat.d[6]    |  B[5]    |  Left ]
    [dat.d[7]    |  B[6]    |  Left ]
    [DS          |  H[5]    |  Left ]
    [VDDIM       |  C[2]    |  Right ]
    [pwr.vcc[0]  |  E[6]    |  Right ]
    [pwr.vcc[1]  |  F[5]    |  Right ]
    [pwr.vcc[2]  |  J[10]   |  Right ]
    [pwr.vcc[3]  |  K[9]    |  Right ]
    [pwr.vccq[0] |  C[6]    |  Right ]
    [pwr.vccq[1] |  M[4]    |  Right ]
    [pwr.vccq[2] |  N[4]    |  Right ]
    [pwr.vccq[3] |  P[3]    |  Right ]
    [pwr.vccq[4] |  P[5]    |  Right ]
    [pwr.vss[0]  |  A[6]    |  Right ]
    [pwr.vss[1]  |  E[7]    |  Right ]
    [pwr.vss[2]  |  G[5]    |  Right ]
    [pwr.vss[3]  |  H[10]   |  Right ]
    [pwr.vss[4]  |  K[8]    |  Right ]
    [pwr.vss[5]  |  J[5]    |  Right ] 
    [pwr.vssq[0] |  C[4]    |  Right ]
    [pwr.vssq[1] |  N[2]    |  Right ]
    [pwr.vssq[2] |  N[5]    |  Right ]
    [pwr.vssq[3] |  P[4]    |  Right ]
    [pwr.vssq[4] |  P[6]    |  Right ]
    [RFU[0]      |  A[7]    |  Left ]
    [RFU[1]      |  E[5]    |  Left ]
    [RFU[2]      |  E[8]    |  Left ]
    [RFU[3]      |  E[9]    |  Left ]
    [RFU[4]      |  E[10]   |  Left ]
    [RFU[5]      |  F[10]   |  Left ]
    [RFU[6]      |  G[10]   |  Left ]
    [RFU[7]      |  K[6]    |  Left ]
    [RFU[8]      |  K[7]    |  Left ]
    [RFU[9]      |  K[10]   |  Left ]
    [RFU[10]     |  P[10]   |  Left ]
    [NC[0]       |  A[1]    |  Right ]
    [NC[1]       |  A[2]    |  Right ]
    [NC[2]       |  A[8]    |  Right ]
    [NC[3]       |  A[9]    |  Right ]
    [NC[4]       |  A[10]   |  Right ]
    [NC[5]       |  A[11]   |  Right ]
    [NC[6]       |  A[12]   |  Right ]
    [NC[7]       |  A[13]   |  Right ]
    [NC[8]       |  A[14]   |  Right ]
    [NC[9]       |  B[1]    |  Right ]
    [NC[10]      |  B[7]    |  Right ]
    [NC[11]      |  B[8]    |  Right ]   
    [NC[12]      |  B[9]    |  Right ]
    [NC[13]      |  B[10]   |  Right ]
    [NC[14]      |  B[11]   |  Right ]
    [NC[15]      |  B[12]   |  Right ]
    [NC[16]      |  B[13]   |  Right ]
    [NC[17]      |  B[14]   |  Right ]
    [NC[18]      |  C[1]    |  Right ]
    [NC[19]      |  C[3]    |  Right ]
    [NC[20]      |  C[5]    |  Right ]
    [NC[21]      |  C[7]    |  Right ]
    [NC[22]      |  C[8]    |  Right ]
    [NC[23]      |  C[9]    |  Right ]
    [NC[24]      |  C[10]   |  Right ]
    [NC[25]      |  C[11]   |  Right ]
    [NC[26]      |  C[12]   |  Right ]
    [NC[27]      |  C[13]   |  Right ]
    [NC[28]      |  C[14]   |  Right ]
    [NC[29]      |  D[1]    |  Right ]
    [NC[30]      |  D[2]    |  Right ]
    [NC[31]      |  D[3]    |  Right ]
    [NC[32]      |  D[4]    |  Right ]  
    [NC[33]      |  D[12]   |  Right ]
    [NC[34]      |  D[13]   |  Right ]
    [NC[35]      |  D[14]   |  Right ]
    [NC[36]      |  E[1]    |  Right ]
    [NC[37]      |  E[2]    |  Right ]
    [NC[38]      |  E[3]    |  Right ]
    [NC[39]      |  E[12]   |  Right ]
    [NC[40]      |  E[13]   |  Right ]
    [NC[41]      |  E[14]   |  Right ]
    [NC[42]      |  F[1]    |  Right ]
    [NC[43]      |  F[2]    |  Right ]
    [NC[44]      |  F[3]    |  Right ]
    [NC[45]      |  F[12]   |  Right ]
    [NC[46]      |  F[13]   |  Right ]
    [NC[47]      |  F[14]   |  Right ]
    [NC[48]      |  G[1]    |  Right ] 
    [NC[49]      |  G[2]    |  Right ]
    [NC[50]      |  G[3]    |  Right ]
    [NC[51]      |  G[12]   |  Right ]
    [NC[52]      |  G[13]   |  Right ]
    [NC[53]      |  G[14]   |  Right ]
    [NC[54]      |  H[1]    |  Right ]
    [NC[55]      |  H[2]    |  Left ]
    [NC[56]      |  H[3]    |  Left ]
    [NC[57]      |  H[12]   |  Left ]
    [NC[58]      |  H[13]   |  Left ]
    [NC[59]      |  H[14]   |  Left ]
    [NC[60]      |  J[1]    |  Left ] 
    [NC[61]      |  J[2]    |  Left ]
    [NC[62]      |  J[3]    |  Left ]
    [NC[63]      |  J[12]   |  Left ]
    [NC[64]      |  J[13]   |  Left ]
    [NC[65]      |  J[14]   |  Left ]
    [NC[66]      |  K[1]    |  Left ]
    [NC[67]      |  K[2]    |  Left ]
    [NC[68]      |  K[3]    |  Left ]
    [NC[69]      |  K[12]   |  Left ]
    [NC[70]      |  K[13]   |  Left ]
    [NC[71]      |  K[14]   |  Left ]
    [NC[72]      |  L[1]    |  Left ]
    [NC[73]      |  L[2]    |  Left ]
    [NC[74]      |  L[3]    |  Left ]
    [NC[75]      |  L[12]   |  Left ]
    [NC[76]      |  L[13]   |  Left ] 
    [NC[77]      |  L[14]   |  Left ]
    [NC[78]      |  M[1]    |  Left ]
    [NC[79]      |  M[2]    |  Left ]
    [NC[80]      |  M[3]    |  Left ]
    [NC[81]      |  M[7]    |  Left ]
    [NC[82]      |  M[8]    |  Left ]
    [NC[83]      |  M[9]    |  Left ]
    [NC[84]      |  M[10]   |  Left ]
    [NC[85]      |  M[11]   |  Left ]
    [NC[86]      |  M[12]   |  Left ]
    [NC[87]      |  M[13]   |  Left ]
    [NC[88]      |  M[14]   |  Left ]
    [NC[89]      |  N[1]    |  Left ]
    [NC[90]      |  N[3]    |  Left ]   
    [NC[91]      |  N[6]    |  Left ]
    [NC[92]      |  N[7]    |  Left ]
    [NC[93]      |  N[8]    |  Left ]   
    [NC[94]      |  N[9]    |  Left ]
    [NC[95]      |  N[10]   |  Left ]
    [NC[96]      |  N[11]   |  Left ]
    [NC[97]      |  N[12]   |  Left ]
    [NC[98]      |  N[13]   |  Left ]
    [NC[99]      |  N[14]   |  Left ]
    [NC[100]     |  P[1]    |  Left ]
    [NC[101]     |  P[2]    |  Left ]
    [NC[102]     |  P[7]    |  Left ]
    [NC[103]     |  P[8]    |  Left ]
    [NC[104]     |  P[9]    |  Left ]
    [NC[105]     |  P[11]   |  Left ]
    [NC[106]     |  P[12]   |  Left ]
    [NC[107]     |  P[13]   |  Left ]
    [NC[108]     |  P[14]   |  Left ]
  assign-package(bga-pkg(0.5, 0.3, [14, 14], [14.0, 12.0], 
  [#R(D[5]), #R(D[6]), #R(D[7]), #R(D[8]), #R(D[9]), #R(D[10]), #R(D[11]),   
   #R(E[4]), #R(E[11]), 
   #R(F[4]), #R(F[6]), #R(F[7]), #R(F[8]), #R(F[9]), #R(F[11]), 
   #R(G[4]), #R(G[6]), #R(G[7]), #R(G[8]), #R(G[9]), #R(G[11]),    
   #R(H[4]), #R(H[6]), #R(H[7]), #R(H[8]), #R(H[9]), #R(H[11]),  
   #R(J[4]), #R(J[6]), #R(J[7]), #R(J[8]), #R(J[9]), #R(J[11]),         
   #R(K[4]), #R(K[11]), 
   #R(L[4]), #R(L[5]), #R(L[6]), #R(L[7]), #R(L[8]), #R(L[9]), #R(L[10]), #R(L[11])]), ps)
  ;omit pads D[5-11], E4, E11, F4, F[6-9], F[11], G4, G[6-9], G[11], H4, H[6-9], H[11], J4, J[6-9], J[11], K4, K11, L[4-11]
  make-box-symbol(ps)

  supports emmc-data :
    for i in 0 to 8 do :
      d[i] => dat.d[i]
    clk => dat.clk
    cmd => dat.cmd

public pcb-module emmc_module :
  pin GND
  pin VCC       ;2.7V - 3.6V
  pin VCCQ      ;1.7V - 1.95V or 2.7V-3.6V
  pin CLK
  pin DS
  pin nRESET

  inst eMMC : {ocdb/micron/MTFC8GAKAJCN-4M-IT/component}

  ;GND pins
  for i in 0 to 6 do :
   net (GND eMMC.pwr.vss[i])
  for i in 0 to 5 do :
   net (GND eMMC.pwr.vssq[i])

  ;pull-up resistance nRESET, cmd, dat[8]
  net (nRESET, eMMC.nRESET)
  res-strap(VCCQ, nRESET, 50000.0)                ;datasheet = 50kohm typical (4.7k - 50k)
  res-strap(VCCQ, eMMC.dat.cmd, 10000.0)          ;datasheet = 10kohm typical (4.7k - 50k)
  for i in 0 to 8 do :
    res-strap(VCCQ, eMMC.dat.d[i], 50000.0)       ;datasheet = 50kohm typical (10k - 50k)

  ;series resistance clk, ds
  res-strap(CLK, eMMC.dat.clk, 22.0)              ;datasheet = 22ohm typical (0 - 47)
  res-strap(DS, eMMC.DS, 22.0)                    ;datasheet = 22ohm typical (0 - 47)

  ;capacitance vccq
  ; vccq = eMMC controller core and IO power supply
  for i in 0 to 5 do :
    net (VCCQ eMMC.pwr.vccq[i])
  cap-strap(VCCQ, GND, 2.2e-6)                    ;datasheet = 2.2uF typical (2.2u - 4.7u)
  cap-strap(VCCQ, GND, 0.1e-6)                    ;datasheet = 0.1uF typical (0.1u - 0.22u)

  ;capacitance vcc
  ;vcc = NAND interfance and NAND flash power supply
  for i in 0 to 4 do :
    net (VCC eMMC.pwr.vcc[i])
  cap-strap(VCCQ, GND, 2.2e-6)                    ;datasheet = 2.2uF typical (2.2u - 4.7u)
  cap-strap(VCCQ, GND, 0.1e-6)                    ;datasheet = 0.1uF typical (0.1u - 0.22u)

  ;capacitance vddim
  ;vddim = internal voltage node.  Do not connect to supply voltage or GND
  cap-strap(eMMC.VDDIM, GND, 1.0e-6)              ;datasheet = 1.0uF typical (1.0u - 4.7u)
  cap-strap(eMMC.VDDIM, GND, 0.1e-6)              ;datasheet = 0.1uF typical (0.1u - 0.1u)
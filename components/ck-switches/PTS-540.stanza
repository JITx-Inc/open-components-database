#use-added-syntax(jitx)
; Include space before colon in definitions
defpackage ocdb/components/ck-switches/PTS-540 : 
  import core
  import collections
  import math
  import jitx
  import jitx/commands
  import ocdb/utils/defaults

  import ocdb/utils/landpatterns 
  import ocdb/utils/symbols
  import ocdb/utils/box-symbol
  import ocdb/utils/bundles
  import ocdb/utils/generator-utils
  import ocdb/utils/generic-components

pcb-landpattern sw-landpattern :
; The grid-locs function makes generating m x n grids of pads easy 
  for (l in grid-locs(2, 2, 3.1, 2.75), i in [3 4 1 2]) do :
    pad p[i] : smd-pad(0.6, 0.65) at l

  layer(Courtyard(Top)) = Rectangle(3.7, 3.7)
  layer(Silkscreen("f-silk", Top)) = LineRectangle(3.7, 3.7)
  ref-label()

public pcb-component component :
  manufacturer = "C&K Switches"
  description = "Tactile Switch"
  mpn = "PTS540-JM035-SMTR-LFS"

; Use unified generator to create pins
  port p : pin[1 through 4]

  val sym = spst(2, 2)
  symbol = sym(p[1] => sym.t[1], p[2] => sym.t[2], p[3] => sym.p[1], p[4] => sym.p[2])
  landpattern = sw-landpattern(p[1] => sw-landpattern.p[1], p[2] => sw-landpattern.p[2], p[3] => sw-landpattern.p[3], p[4] => sw-landpattern.p[4])

public pcb-module module :
; Define pins or ports to externally interface with other modules
  port pwr : power
  pin button

  inst sw : ocdb/components/ck-switches/PTS-540/component
  inst r : chip-resistor(1.0e6)
  net (button, sw.p[1], sw.p[2])
  net (pwr.gnd, sw.p[3], sw.p[4])
  net (r.p[1], sw.p[1])
  net (pwr.vdd, r.p[2])

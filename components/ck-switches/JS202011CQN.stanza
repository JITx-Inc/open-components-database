#use-added-syntax(jitx)
defpackage ocdb/components/ck-switches/JS202011CQN : 
  import core
  import collections
  import math
  import jitx
  import jitx/commands
  import ocdb/utils/defaults

  import ocdb/utils/landpatterns 
  import ocdb/utils/symbols
  import ocdb/utils/box-symbol
  import ocdb/utils/bundles
  import ocdb/utils/generator-utils
  import ocdb/utils/generic-components

pcb-landpattern switch-package :
; The grid-locs function makes generating m x n grids of pads easy 
  for (l in grid-locs(2, 3, 2.5, 3.3), i in [4 5 6 1 2 3]) do :
    pad p[i] : pth-pad(0.45) at l

  layer(Courtyard(Top)) = Rectangle(9.0, 3.6)
  layer(Silkscreen("f-silk", Top)) = LineRectangle(9.1, 3.7)
  ref-label()

public pcb-component component :
  manufacturer = "C&K Switches"
  description = "Slide Switch DPDT Through Hole"
  mpn = "JS202011CQN"

; Use unified generator to create pins
  port p : pin[[1 through 2]]
  port t : pin[[1 through 4]]

  val sym = spst(2, 4)
  symbol = sym(p[1] => sym.p[1], p[2] => sym.p[2], t[1] => sym.t[1], t[2] => sym.t[2], t[3] => sym.t[3], t[4] => sym.t[4])
  val land = switch-package
  landpattern = land(p[1] => land.p[2], p[2] => land.p[5], t[1] => land.p[1], t[2] => land.p[3], t[3] => land.p[4], t[4] => land.p[6])

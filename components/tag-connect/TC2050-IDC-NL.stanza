#use-added-syntax(jitx)
defpackage ocdb/tag-connect/TC2050-IDC-NL :
  import core
  import collections
  import math
  import jitx
  import jitx/commands
  import ocdb/defaults

  import ocdb/land-patterns
  import ocdb/symbols
  import ocdb/bundles
  import ocdb/generator-utils
  import ocdb/generic-components

pcb-landpattern footprint :
  for (l in grid-locs(2, 5, 1.27, 1.27), i in [1 3 5 7 9 2 4 6 8 10]) do :
    pad p[i] : testpoint-pad(0.787) at l
  
  layer(Cutout()) = Circle((- 3.81), 0.0, 0.5)
  layer(Cutout()) = Circle(3.81, 1.015, 0.5)
  layer(Cutout()) = Circle(3.81, (- 1.015), 0.5)
  layer(Courtyard(Top)) = Rectangle(8.62, 3.03)
  layer(Silkscreen("f-silk", Top)) = LineRectangle(8.62, 3.03)
  ref-label()

public pcb-component component :
  description = "Insertion point for TC-2050 connector"
  port p: pin[1 through 10]
  val sym = header-symbol(10,2)
  symbol = sym(for i in 1 through 10 do : p[i] => sym.p[i])
  landpattern = footprint(for i in 1 through 10 do : p[i] => footprint.p[i])
  reference-prefix = "J"

public pcb-module module :
  port j : jtag([JTAG-TRSTN])
  port swd : swd
  port pwr : power
  public inst jtag : ocdb/tag-connect/TC2050-IDC-NL/component
  net (j.trstn, jtag.p[10])
  net (j.tdi, jtag.p[8])
  net (j.tdo, jtag.p[6])
  net (j.tck, swd.swdclk, jtag.p[4])
  net (j.tms, swd.swdio, jtag.p[2])
  net (pwr.vdd, jtag.p[1])
  net (pwr.gnd, jtag.p[9], jtag.p[5], jtag.p[3])

  val jtag-bundle = /jtag([JTAG-TRSTN])
  val con = jtag
  supports jtag-bundle:
    jtag-bundle.trstn => con.p[10]
    jtag-bundle.tdi => con.p[8]
    jtag-bundle.tdo => con.p[6]
    jtag-bundle.tck => con.p[4]
    jtag-bundle.tms => con.p[2]

  supports /swd:
    ;ocdb/bundles/swd.swdclk => con.p[4]
    ;ocdb/bundles/swd.swdio => con.p[2]
    /swd.swdclk => con.p[4]
    /swd.swdio  => con.p[2]

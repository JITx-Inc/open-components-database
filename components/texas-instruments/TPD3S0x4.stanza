#use-added-syntax(jitx)
defpackage ocdb/texas-instruments/TPD3S0x4 :
  import core
  import collections
  import math
  import jitx
  import jitx/commands
  import ocdb/defaults

  import ocdb/land-patterns
  import ocdb/symbols
  import ocdb/bundles
  import ocdb/generator-utils
  import ocdb/generic-components
  import ocdb/box-symbol
  import ocdb/property-structs

public pcb-component component :
  manufacturer = "Texas Instruments"
  mpn = "TPD3S014DBVR"
  description = "USB power and data protection"
  pin-properties :
    [pin:Ref | pads:Int ... | side:Dir | generic-pin:GenericPin]
    [GND     | 2            | Down     | -]
    [IN      | 3            | Left     | GenericPin(Interval(-0.3, 6.0, false), 2.0e3)]
    [OUT     | 4            | Right    | GenericPin(Interval(-0.3, 6.0, false), 2.0e3)]
    [EN      | 1            | Left     | GenericPin(Interval(-0.3, 6.0, false), 2.0e3)]
    [D1      | 5            | Right    | GenericPin(Interval(-0.3, 6.0, false), 12.0e3)]
    [D2      | 6            | Right    | GenericPin(Interval(-0.3, 6.0, false), 12.0e3)]
  assign-landpattern(SOT95P280X145-6N)
  make-box-symbol()
  property(self.IN.power-pin) = PowerPin(Interval(4.5, 5.5, false))


public pcb-module module :
  port usb-in : usb-2
  port usb-out : usb-2
  pin en

  public inst tpd : ocdb/texas-instruments/TPD3S0x4/component
  net (usb-in.vbus.vdd tpd.IN)
  net (usb-in.vbus.gnd tpd.GND usb-out.vbus.gnd)
  net (usb-out.vbus.vdd tpd.OUT)
  net (usb-in.data.P tpd.D1 usb-out.data.P)
  net (usb-in.data.N tpd.D2 usb-out.data.N)
  net (usb-in.id usb-out.id)
  net (tpd.EN en)
  cap-strap(tpd.IN, tpd.GND, 0.1e-6)
  cap-strap(tpd.OUT, tpd.GND, 10.0e-6)

  ; Pass through the supplied voltage
  ; eval-when has-property?(tpd.IN.rail-voltage):
    ; property(tpd.OUT.power-supply-pin) = PowerSupplyPin(property(tpd.IN.rail-voltage), 0.6) 
  property(tpd.OUT.power-supply-pin) = PowerSupplyPin(5.0, 0.6) 
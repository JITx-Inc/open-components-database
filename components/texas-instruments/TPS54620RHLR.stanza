#use-added-syntax(jitx)
defpackage ocdb/components/texas-instruments/TPS54620RHLR :

  import core
  import collections
  import math

  import jitx
  import jitx/commands

  import ocdb/utils/defaults
  import ocdb/utils/landpatterns
  import ocdb/utils/symbols
  import ocdb/utils/symbol-utils
  import ocdb/utils/generic-components

  import ocdb/utils/bundles
  import ocdb/utils/box-symbol
  import ocdb/utils/property-structs
  import ocdb/utils/generator-utils
  import ocdb/utils/checks
  import ocdb/utils/land-protrusions

public pcb-landpattern TPS54620RHLR-landpattern :

  ; you can pull these values from the table of dimensions including +/- tolerance
  ; instead of using mfg recommended pad sizes
  val lead-span = tol(3.5, 0.15)
  val component-sz = tol(3.5, 0.15)
  val pad-length = tol(0.40, 0.1)
  val pad-width = tol(0.24, 0.06)

  ; val thermal-pad-shape = Polygon(
  ;   symmetric-about-y(
  ;     symmetric-about-x([
  ;       Point(0.0, 0.0)
  ;       Point(0.0, 1.425)
  ;       Point(0.175, 1.425)
  ;       Point(0.175, 2.15)
  ;       Point(0.375, 2.15)
  ;       Point(0.375, 1.025)
  ;       Point(1.025, 1.025)
  ;       Point(1.025, 0.0)
  ;     ])))

  ; suggested by Fredrik to fix the self-intersection of the original shape
  val thermal-pad-shape = Polygon([
                            Point(0.0, 1.425),
                            Point(0.175, 1.425),
                            Point(0.175, 2.15),
                            Point(0.375, 2.15),
                            Point(0.375, 1.025),
                            Point(1.025, 1.025),
                            Point(1.025, 0.0),
                            Point(1.025, -1.025),
                            Point(0.375, -1.025),
                            Point(0.375, -2.15),
                            Point(0.175, -2.15),
                            Point(0.175, -1.425),
                            Point(0.0, -1.425),
                            Point(-0.175, -1.425),
                            Point(-0.175, -2.15),
                            Point(-0.375, -2.15),
                            Point(-0.375, -1.025),
                            Point(-1.025, -1.025),
                            Point(-1.025, 0.0),
                            Point(-1.025, 1.025),
                            Point(-0.375, 1.025),
                            Point(-0.375, 2.15),
                            Point(-0.175, 2.15),
                            Point(-0.175, 1.425),
                          ])

  make-quad-landpattern(
    5, 2, 5, 2 ; number of pins on Left, Bottom, Right, Top side of the landpattern (clockwise)
    0.50, 1.50, 0.50, 1.50 ; pitch on Left, Bottom, Right, Top side of the landpattern. 
    lead-span, lead-span,
    component-sz, component-sz,
    pad-length, pad-width,
    QuadFlatNoLeads,
    thermal-pad-shape
  )

public pcb-component component :
  pin RT-CLK
  pin GND
  pin PVIN
  pin VSENSE
  pin COMP
  pin SS-TR
  pin EN
  pin PH
  pin BOOT
  pin PWRGD

  name = "TPS54620RHLR"
  manufacturer = "Texas Instruments"
  description = "6A 17V VQFN-14 DC-DC Converters ROHS"
  datasheet = "https://www.ti.com/lit/ds/symlink/tps54620.pdf"
  reference-prefix = "U"
  mpn = "TPS54620RHLR"

  val generic-props = GenericPin(min-max(-0.3,  3.6), 1500.0)
  val output-props  = GenericPin(min-max(-1.0, 20.0), 6000.0)
  val inputp-props  = GenericPin(min-max( 1.6, 17.0), 6000.0) ; recommended operating limits
  val inputv-props  = GenericPin(min-max( 4.5, 17.0), 1500.0) ; recommended operating limits
  pin-properties :
    [pin:Ref  | pads:Int ... | side:Dir| generic-pin:GenericPin]
    [RT-CLK   | 14           | Left    | generic-props ]
    [GND      | 1 2 15       | Down    | generic-props ]
    [PVIN     | 3 4          | Up      | inputp-props   ]
    [VIN      | 5            | Up      | inputv-props   ]
    [VSENSE   | 6            | Left    | generic-props ]
    [COMP     | 7            | Right   | generic-props ]
    [SS-TR    | 8            | Right   | generic-props ]
    [EN       | 9            | Left    | generic-props ]
    [PH       | 10 11        | Right   | output-props ]
    [BOOT     | 12           | Left    | generic-props ]
    [PWRGD    | 13           | Left    | generic-props ]

    ; [RT-CLK   | 1            | Left    | generic-props ]
    ; [GND      | 2 3 15       | Down    | generic-props ]
    ; [PVIN     | 6            | Up      | generic-props ]
    ; [VSENSE   | 7            | Left    | generic-props ]
    ; [COMP     | 8            | Right   | generic-props ]
    ; [SS-TR    | 9            | Right   | generic-props ]
    ; [EN       | 10           | Left    | generic-props ]
    ; [PH       | 11 12        | Right   | generic-props ]
    ; [BOOT     | 13           | Left    | generic-props ]
    ; [PWRGD    | 14           | Left    | generic-props ]
  make-box-symbol()
  assign-landpattern(TPS54620RHLR-landpattern)
  property(self.rated-temperature) = min-max(-40.0, 85.0)

public pcb-module module :
  pin Vin
  pin Vout
  pin GND

  public inst U1 : ocdb/components/texas-instruments/TPS54620RHLR/component
  net (GND U1.GND)
  bypass-cap-strap(Vin, GND, 10.0e-6)
  bypass-cap-strap(Vin, GND, 10.0e-6)
  bypass-cap-strap(Vin, GND, 4.7e-6)
  net (Vin U1.PVIN)
  net (Vin U1.VIN)
  inst Rent : chip-resistor(["resistance" => 102.0e3])
  inst Renb : chip-resistor(["resistance" => 36.5e3])
  net (Vin Rent.p[1])
  net (Rent.p[2] Renb.p[1])
  net (Renb.p[1] U1.EN)
  net (Renb.p[2] GND)
  inst Rt : chip-resistor(["resistance" => 53.6e3])
  net (Rt.p[1] U1.RT-CLK)
  net (Rt.p[2] GND)
  inst Css : ceramic-cap(["capacitance" => 2.7e-9])
  net (Css.p[1] U1.SS-TR)
  net (Css.p[2] GND)
  inst Rcomp : chip-resistor(["resistance" => 3.09e3])
  inst Ccomp : ceramic-cap(["capacitance" => 5.6e-9])
  inst Ccomp2 : ceramic-cap(["capacitance" => 130.0e-12])
  net (U1.COMP Rcomp.p[1])
  net (Rcomp.p[2] Ccomp.p[1])
  net (Ccomp.p[2] GND)
  net (U1.COMP Ccomp2.p[1])
  net (Ccomp2.p[2] GND)
  inst L1 : ocdb/components/sunlord/SWPA6045S1R8NT/component ; 12mOhm
  inst Cboot : ceramic-cap(["capacitance" => 100.0e-9])
  public net PH (U1.PH L1.p[1])
  net vout1 (L1.p[2] Vout)
  net (U1.BOOT Cboot.p[1])
  net (Cboot.p[2] PH)
  val rbot = 10000.0
  val rtop-calc = rbot * (3.30 - 0.80) / 0.80
  val res-top = closest-std-val(rtop-calc, 1.0)
  val res-bot = closest-std-val(rbot, 1.0)
  inst Rfbt : chip-resistor(res-top)
  inst Rfbb : chip-resistor(res-bot)
  net (Vout Rfbt.p[1])
  net (Rfbt.p[2] U1.VSENSE)
  net (U1.VSENSE Rfbb.p[1])
  net (Rfbb.p[2] GND)
  inst Cout : ceramic-cap(["capacitance" => 20.0e-6])[5]
  for i in 0 to 5 do :
    net (Vout Cout[i].p[1])
    net (Cout[i].p[2] GND)
  
  val vo = (property(Rfbt.resistance) / property(Rfbb.resistance) + 1.0) * 0.80
  println("Output target voltage for TPS54620 is %_V" % [vo])
  property(L1.p[2].power-supply-pin) = PowerSupplyPin(typ(vo), 6.0)
  property(vout1.voltage) = typ(vo)

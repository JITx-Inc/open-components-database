#use-added-syntax(jitx)
defpackage ocdb/components/q-n-j/CR2032-BS-6-1 :
  import core
  import collections
  import math
  import jitx
  import jitx/commands

  import ocdb/utils/defaults
  import ocdb/utils/landpatterns
  import ocdb/utils/symbols
  import ocdb/utils/symbol-utils
  import ocdb/utils/generic-components

  import ocdb/utils/bundles
  import ocdb/utils/box-symbol
  import ocdb/utils/property-structs
  import ocdb/utils/generator-utils
  import ocdb/utils/checks

pcb-landpattern CR2032-BS-6-1-landpattern :

  pad p[1] : smd-pad(4.2, 3.0) at loc(0.000,   14.500)
  pad p[2] : smd-pad(4.2, 3.0) at loc(0.000,  -14.500)

  layer(Silkscreen("f-silk", Top)) = Line(0.12, [ Point(0.0, 17.75), Point(0.0, 16.75) ])
  layer(Silkscreen("f-silk", Top)) = Line(0.12, [ Point(-0.5, 17.25), Point(0.5, 17.25) ])
  layer(Courtyard(Top)) = Rectangle(16.0, 32.0)
  ref-label()


public pcb-component component (capacity : Double) : ; capacity is in mAh
  port power : power

  manufacturer = "Q&J"
  description = "SMD Battery Box/Battery Holders ROHS"
  mpn = "CR2032-BS-6-1"
  reference-prefix = "B"
  ; public pcb-landpattern two-pin-landpattern (Z:Double, G:Double, X:Double, w:Double, h:Double):
  ; from IPC-SM-782 spec
  ; Z - width between outer pad edges
  ; G - width between inner pad edges
  ; X - pad height
  ; w, h - width and height of courtyard in mm
  ;val pkg = two-pin-landpattern(32.0, 26.0, 4.2, 32.0, 16.0)
  val pkg = CR2032-BS-6-1-landpattern
  val sym = header-symbol(2,1)
  symbol = sym(power.vdd => sym.p[1], power.gnd => sym.p[2])
  landpattern = pkg(power.vdd => pkg.p[1], power.gnd => pkg.p[2])
  property(self.rated-temperature) = min-max(-20.0, 70.0)
  property(self.LCSC) = "C70377"
  datasheet = "https://datasheet.lcsc.com/lcsc/1811061923_Q-J-CR2032-BS-6-1_C70377.pdf"
  ; setup the output voltage
  val voltage = typ(3.0)
  property(self.power.vdd.power-supply-pin) = PowerSupplyPin(voltage, capacity / 1000.0) ; for a 1C battery
  property(self.power.vdd.voltage) = voltage
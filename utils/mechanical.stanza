#use-added-syntax(jitx)
defpackage ocdb/utils/mechanical :
  import core
  import collections
  import algorithm/utils
  import lang-utils
  import jitx
  import jitx/commands
  import ocdb/utils/fonts
  import ocdb/manufacturers/rules
  import ocdb/utils/box-symbol
  import ocdb/utils/landpatterns

; ========================================================
; ===================== Generic Label ====================
; ========================================================
pcb-landpattern label-lp (w:Double, h:Double, filled:True|False) :
  layer(Courtyard(Top)) = Rectangle(w, h)
  if filled :
    layer(Silkscreen("silkscreen", Top)) = Rectangle(w, h)
  else:
    ref-label()
    layer(Silkscreen("silkscreen", Top)) = Line(clearance(current-rules(), MinSilkscreenWidth), 
      [ Point(w / -2.0, h / -2.0), Point(w / -2.0, h / 2.0), Point(w / 2.0, h / 2.0), 
        Point(w / 2.0, h / -2.0), Point(w / -2.0, h / -2.0)])

public pcb-component gen-label (w:Double, h:Double, filled:True|False, mfg:String, pn:String, desc:String) :
  name = desc
  description = desc
  manufacturer = mfg
  mpn = pn
  reference-prefix = "MP"
  val sym = box-symbol(5.08, 5.08, 0, 0, 0, 0)
  symbol = sym()
  assign-landpattern( label-lp(w, h, filled) )

public defn gen-label (w:Double, h:Double, filled:True|False, mfg:String, pn:String) :
  gen-label(w, h, filled, mfg, pn, "generic label")
public defn gen-label (w:Double, h:Double, filled:True|False) :
  gen-label(w, h, filled, "Generic Label", to-string("Label %_ X %_ mm" % [h, w]), "generic label")
public defn gen-label (w:Double, h:Double) :
  gen-label(w, h, true, "Generic Label", to-string("Label %_ X %_ mm" % [h, w]), "generic label")
public defn gen-label (filled:True|False) :
  gen-label(19.05, 6.35, filled, "Generic Label", "Label 0.25 x 0.75 in", "generic label")
public defn gen-label () :
  gen-label(19.05, 6.35, true, "Generic Label", "Label 0.25 x 0.75 in", "generic label")

; ========================================================
; ===================== Generic Screw ====================
; ========================================================
public pcb-landpattern empty-lp :
  layer(Courtyard(Top)) = Rectangle(1.0, 1.0)

pcb-symbol screw-symbol :
  layer("background") = Rectangle(5.08, 5.08, loc(2.54, 2.54))
  layer("foreground") = Line(1.0, [    
    Point(3.50823098453952, 4.55436977695498), 
    Point(3.50192883695682, 4.5958513273357), 
    Point(3.49158235042145, 4.63651318049705), 
    Point(3.47729160580905, 4.67596201703966), 
    Point(3.45919483654115, 4.71381625099316), 
    Point(3.43746709146244, 4.74970972087191), 
    Point(3.41231854160498, 4.78329523153066), 
    Point(3.38399244721778, 4.81424791256009), 
    Point(3.35276280472661, 4.84226836073665), 
    Point(3.31893169638479, 4.86708553613004), 
    Point(3.28282636825169, 4.88845938385437), 
    Point(3.24479606476334, 4.90618315610315), 
    Point(3.2052086505143, 4.92008541200703), 
    Point(3.16444705192785, 4.93003167596989), 
    Point(3.12290555323423, 4.93592573844242), 
    Point(3.08098598258551, 4.93771058655058), 
    Point(3.03909382519862, 4.93536895557741)])
  layer("foreground") = Line(1.0, [    
    Point(1.81836617480138, 4.93536895557741), 
    Point(1.77647401741449, 4.93771058655058), 
    Point(1.73455444676577, 4.93592573844242), 
    Point(1.69301294807215, 4.93003167596989), 
    Point(1.6522513494857, 4.92008541200703), 
    Point(1.61266393523666, 4.90618315610315), 
    Point(1.57463363174831, 4.88845938385437), 
    Point(1.53852830361521, 4.86708553613004), 
    Point(1.50469719527339, 4.84226836073665), 
    Point(1.47346755278222, 4.81424791256009), 
    Point(1.44514145839502, 4.78329523153066), 
    Point(1.41999290853756, 4.74970972087191), 
    Point(1.39826516345885, 4.71381625099316), 
    Point(1.38016839419095, 4.67596201703966), 
    Point(1.36587764957855, 4.63651318049705), 
    Point(1.35553116304318, 4.5958513273357), 
    Point(1.34922901546048, 4.55436977695498)])
  layer("foreground") = Line(1.0, [Point(2.86189, 1.88853), Point(2.96349, 1.85615)])
  layer("foreground") = Line(1.0, [Point(1.99829, 1.51874), Point(2.86189, 1.88853)])
  layer("foreground") = Line(1.0, [Point(1.99829, 1.9253), Point(1.99829, 1.51874)])
  layer("foreground") = Line(1.0, [Point(1.99829, 1.41062), Point(2.86189, 1.78041)])
  layer("foreground") = Line(1.0, [Point(1.89669, 1.443), Point(2.96349, 1.85615)])
  layer("foreground") = Line(1.0, [Point(2.86189, 1.78041), Point(2.86189, 1.38053)])
  layer("foreground") = Line(1.0, [Point(2.96349, 1.85615), Point(2.86189, 1.78041)])
  layer("foreground") = Line(1.0, [Point(1.99829, 2.4333), Point(2.86189, 2.8031)])
  layer("foreground") = Line(1.0, [Point(1.99829, 2.54142), Point(2.86189, 2.91122)])
  layer("foreground") = Line(1.0, [Point(1.89669, 2.46568), Point(2.96349, 2.87884)])
  layer("foreground") = Line(1.0, [Point(1.89669, 2.967), Point(2.96349, 3.38015)])
  layer("foreground") = Line(1.0, [Point(1.99829, 3.04274), Point(2.86189, 3.41253)])
  layer("foreground") = Line(1.0, [Point(1.99829, 2.93462), Point(2.86189, 3.30441)])
  layer("foreground") = Line(1.0, [Point(1.99829, 3.43594), Point(2.86189, 3.80573)])
  layer("foreground") = Line(1.0, [Point(1.99829, 3.54406), Point(2.86189, 3.91385)])
  layer("foreground") = Line(1.0, [Point(1.89669, 3.46832), Point(2.96349, 3.88147)])
  layer("foreground") = Line(1.0, [Point(1.89669, 1.95768), Point(2.96349, 2.37084)])
  layer("foreground") = Line(1.0, [Point(1.99829, 2.03342), Point(2.86189, 2.40322)])
  layer("foreground") = Line(1.0, [Point(1.99829, 1.9253), Point(2.86189, 2.2951)])
  layer("foreground") = Line(1.0, [Point(1.99829, 3.43594), Point(1.99829, 3.04274)])
  layer("foreground") = Line(1.0, [Point(1.99829, 2.93462), Point(1.99829, 2.54142)])
  layer("foreground") = Line(1.0, [Point(1.99829, 2.54142), Point(1.89669, 2.46568)])
  layer("foreground") = Line(1.0, [Point(1.89669, 2.46568), Point(1.99829, 2.4333)])
  layer("foreground") = Line(1.0, [Point(1.99829, 2.03342), Point(1.89669, 1.95768)])
  layer("foreground") = Line(1.0, [Point(1.89669, 1.95768), Point(1.99829, 1.9253)])
  layer("foreground") = Line(1.0, [Point(1.99829, 2.4333), Point(1.99829, 2.03342)])
  layer("foreground") = Line(1.0, [Point(1.89669, 2.967), Point(1.99829, 2.93462)])
  layer("foreground") = Line(1.0, [Point(1.99829, 3.04274), Point(1.89669, 2.967)])
  layer("foreground") = Line(1.0, [Point(1.99829, 3.54406), Point(1.89669, 3.46832)])
  layer("foreground") = Line(1.0, [Point(1.89669, 3.46832), Point(1.99829, 3.43594)])
  layer("foreground") = Line(1.0, [Point(1.99829, 3.94394), Point(1.99829, 3.54406)])
  layer("foreground") = Line(1.0, [Point(2.86189, 3.30441), Point(2.86189, 2.91122)])
  layer("foreground") = Line(1.0, [Point(2.86189, 2.8031), Point(2.86189, 2.40322)])
  layer("foreground") = Line(1.0, [Point(2.86189, 2.2951), Point(2.86189, 1.88853)])
  layer("foreground") = Line(1.0, [Point(2.86189, 2.40322), Point(2.96349, 2.37084)])
  layer("foreground") = Line(1.0, [Point(2.96349, 2.37084), Point(2.86189, 2.2951)])
  layer("foreground") = Line(1.0, [Point(2.96349, 2.87884), Point(2.86189, 2.8031)])
  layer("foreground") = Line(1.0, [Point(2.86189, 2.91122), Point(2.96349, 2.87884)])
  layer("foreground") = Line(1.0, [Point(2.86189, 3.80573), Point(2.86189, 3.41253)])
  layer("foreground") = Line(1.0, [Point(2.86189, 3.41253), Point(2.96349, 3.38015)])
  layer("foreground") = Line(1.0, [Point(2.96349, 3.38015), Point(2.86189, 3.30441)])
  layer("foreground") = Line(1.0, [Point(2.08016, 0.93767), Point(2.24686, 0.60249)])
  layer("foreground") = Line(1.0, [Point(2.17113, 0.5266), Point(2.29119, 0.51335)])
  layer("foreground") = Line(1.0, [Point(2.24686, 0.60249), Point(2.17113, 0.5266)])
  layer("foreground") = Line(1.0, [Point(2.17113, 0.5266), Point(2.81169, 0.77468)])
  layer("foreground") = Line(1.0, [Point(1.9565, 0.95816), Point(2.96349, 1.34815)])
  layer("foreground") = Line(1.0, [Point(2.03583, 1.02681), Point(2.86189, 1.38053)])
  layer("foreground") = Line(1.0, [Point(2.08016, 0.93767), Point(2.86189, 1.27241)])
  layer("foreground") = Line(1.0, [Point(1.99829, 1.41062), Point(1.99829, 1.10229)])
  layer("foreground") = Line(1.0, [Point(1.9565, 0.95816), Point(2.08016, 0.93767)])
  layer("foreground") = Line(1.0, [Point(2.03583, 1.02681), Point(1.9565, 0.95816)])
  layer("foreground") = Line(1.0, [Point(1.99829, 1.10229), Point(2.03583, 1.02681)])
  layer("foreground") = Line(1.0, [Point(1.89669, 1.443), Point(1.99829, 1.41062)])
  layer("foreground") = Line(1.0, [Point(1.99829, 1.51874), Point(1.89669, 1.443)])
  layer("foreground") = Line(1.0, [Point(2.29119, 0.51335), Point(2.42894, 0.23636)])
  layer("foreground") = Line(1.0, [Point(2.42894, 0.23636), Point(2.64542, 0.66932)])
  layer("foreground") = Line(1.0, [Point(2.71148, 0.80144), Point(2.86189, 1.10228)])
  layer("foreground") = Line(1.0, [Point(2.81169, 0.77468), Point(2.71148, 0.80144)])
  layer("foreground") = Line(1.0, [Point(2.64542, 0.66932), Point(2.81169, 0.77468)])
  layer("foreground") = Line(1.0, [Point(2.24686, 0.60249), Point(2.71148, 0.80144)])
  layer("foreground") = Line(1.0, [Point(2.29119, 0.51335), Point(2.64269, 0.66387)])
  layer("foreground") = Line(1.0, [Point(2.86189, 1.27241), Point(2.86189, 1.10228)])
  layer("foreground") = Line(1.0, [Point(2.96349, 1.34815), Point(2.86189, 1.27241)])
  layer("foreground") = Line(1.0, [Point(2.86189, 1.38053), Point(2.96349, 1.34815)])
  layer("foreground") = Line(1.0, [Point(1.99829, 3.94394), Point(2.83068, 4.30036)])
  layer("foreground") = Line(1.0, [Point(1.99829, 4.05206), Point(2.57818, 4.30036)])
  layer("foreground") = Line(1.0, [Point(1.89669, 3.97632), Point(2.73341, 4.30036)])
  layer("foreground") = Line(1.0, [Point(1.89669, 3.97632), Point(1.99829, 3.94394)])
  layer("foreground") = Line(1.0, [Point(1.99829, 4.05206), Point(1.89669, 3.97632)])
  layer("foreground") = Line(1.0, [Point(1.99829, 4.30036), Point(1.99829, 4.05206)])
  layer("foreground") = Line(1.0, [Point(2.86189, 4.30036), Point(2.86189, 3.91385)])
  layer("foreground") = Line(1.0, [Point(2.86189, 3.91385), Point(2.96349, 3.88147)])
  layer("foreground") = Line(1.0, [Point(2.96349, 3.88147), Point(2.86189, 3.80573)])
  layer("foreground") = Line(1.0, [Point(1.99829, 4.30036), Point(2.85917, 4.30036)])
  layer("foreground") = Line(1.0, [Point(3.50823, 4.30036), Point(3.50823, 4.55436)])
  layer("foreground") = Line(1.0, [Point(1.34923, 4.30036), Point(3.50823, 4.30036)])
  layer("foreground") = Line(1.0, [Point(1.34923, 4.30036), Point(1.34923, 4.55436)])
  layer("foreground") = Line(1.0, [Point(1.81837, 4.93536), Point(3.0391, 4.93536)])
  layer("foreground") = Text(">VALUE", 0.762, SW, loc(0.0, 5.73771058655058))
  layer("foreground") = Text(">REF", 0.762, SW, loc(0.0, 6.79971058655058))

public pcb-component gen-screw (screw-size:String, mfg:String, pn:String, desc:String) :
  name = desc
  description = desc
  manufacturer = mfg
  mpn = pn
  reference-prefix = "MP"
  property(self.size) = screw-size
  val sym = screw-symbol
  symbol = sym()
  assign-landpattern( empty-lp )

public defn gen-screw () :
  gen-screw("SCREW", "Generic", "M3 x 10mm", "Generic M3 x 10mm Screw")

public defn gen-screw (desc:String) :
  gen-screw("SCREW", "Generic", desc, desc)

public defn gen-screw (mfg:String, pn:String) :
  gen-screw("SCREW", mfg, pn, to-string("SCREW, %_, %_" % [mfg, pn]) )

public defn gen-screw (mfg:String, pn:String, desc:String) :
  gen-screw("Screw", mfg, pn, desc)

; ========================================================
; ===================== Generic Washer ===================
; ========================================================
pcb-symbol washer-symbol :
  layer("background") = Rectangle(5.08, 5.08, loc(2.54, 2.54))
  layer("foreground") = Circle(2.54, 2.54, 2.0)
  layer("foreground") = Circle(2.54, 2.54, 1.0)
  layer("foreground") = Text(">VALUE", 0.762, SW, loc(0.0, 5.38))
  layer("foreground") = Text(">REF", 0.762, SW, loc(0.0, 6.442))

public pcb-component gen-washer (washer-size:String, mfg:String, pn:String, desc:String) :
  name = desc
  description = desc
  manufacturer = mfg
  mpn = pn
  reference-prefix = "MP"
  property(self.size) = washer-size
  val sym = washer-symbol
  symbol = sym()
  assign-landpattern( empty-lp )

public defn gen-washer () :
  gen-washer("M3", "Generic", "M3 Washer", "Generic M3 Steel Washer")

public defn gen-washer (mfg:String, pn:String, desc:String) :
  gen-washer("Washer", mfg, pn, desc)

public defn gen-washer (desc:String) :
  gen-washer("Washer", "Generic", desc, desc)

public defn gen-washer (mfg:String, pn:String) :
  gen-washer("Washer", mfg, pn, to-string("WASHER, %_, %_" % [mfg, pn]) )
; ========================================================
; ====================== Generic Nut =====================
; ========================================================
pcb-symbol nut-symbol :
  layer("background") = Rectangle(5.08, 5.08, loc(2.54, 2.54))
  layer("foreground") = Circle(2.54, 2.54, 1.0)
  layer("foreground") = Line(1.0, [Point(4.12489, 3.45786), Point(2.47389, 4.41107)])
  layer("foreground") = Line(1.0, [Point(2.47389, 4.41107), Point(0.82289, 3.45786)])
  layer("foreground") = Line(1.0, [Point(0.82289, 3.45786), Point(0.82289, 1.55145)])
  layer("foreground") = Line(1.0, [Point(0.82289, 1.55145), Point(2.47389, 0.59825)])
  layer("foreground") = Line(1.0, [Point(2.47389, 0.59825), Point(4.12489, 1.55145)])
  layer("foreground") = Line(1.0, [Point(4.12489, 1.55145), Point(4.12489, 3.45786)])
  layer("foreground") = Text(">VALUE", 0.762, SW, loc(0.0, 5.38))
  layer("foreground") = Text(">REF", 0.762, SW, loc(0.0, 6.442))

public pcb-component gen-nut (nut-size:String, mfg:String, pn:String, desc:String) :
  name = desc
  description = desc
  manufacturer = mfg
  mpn = pn
  reference-prefix = "MP"
  property(self.size) = nut-size
  val sym = nut-symbol
  symbol = sym()
  assign-landpattern( empty-lp )

public defn gen-nut () :
  gen-nut("M3", "Generic", "M3 Nut", "Generic M3 Steel Nut")

public defn gen-nut (desc:String) :
  gen-nut("NUT", "Generic", desc, desc)

public defn gen-nut (mfg:String, pn:String) :
  gen-nut("NUT", mfg, pn, to-string("NUT, %_, %_" % [mfg, pn]) )

public defn gen-nut (mfg:String, pn:String, desc:String) :
  gen-nut("Nut", mfg, pn, desc)

  ; print part number, version and revision, 1 line, min stroke



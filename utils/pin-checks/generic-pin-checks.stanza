#use-added-syntax(jitx)
defpackage ocdb/utils/pin-checks/generic-pin-checks :
  import core
  import collections
  import jitx
  import jitx/commands
  import ocdb/utils/property-structs
  import ocdb/utils/pin-checks/utils
  
val NAME        = "Generic Pin Checks"
val DESCRIPTION = "Check voltage on generic pins"

doc: "Check a generic pin"
public defn check-generic-pin (p:JITXObject) :
  inside pcb-module :
    check generic-pin(p)

pcb-check generic-pin (p:JITXObject) :
  val g-props = property(p.generic-pin)
  if (connected?(p)) :
    #CHECK(
        condition = has-property?(p.voltage)
        name = context(p)
        category = "Generic pin checks (Data)"
        description = DESCRIPTION
        subcheck-description = "Verify the generic pin has a voltage property attached"
        pass-message = "Pin %_ has the voltage property (%_V) attached" % 
          [context(p), property(p.voltage)],
        info-message = "Pin %_ does not have the voltage property attached" %
          [context(p)],
        locators = [p]
      )

      #CHECK(
        condition = in-range?(max-voltage(g-props), property(p.voltage)),
        name = context(p)
        category = "Generic pin checks"
        description = DESCRIPTION      
        subcheck-description = "Verify the max voltage on a generic pin is within its allowable range",
        pass-message = "voltage %_V on pin %_ is within the recommended operating range %_V"
          % [property(p.voltage), context(p), max-voltage(g-props)],
        fail-message = "voltage %_V on pin %_ is outside the recommended operating range %_V" 
          % [property(p.voltage), context(p), max-voltage(g-props)],
        locators = [p]
      )
    

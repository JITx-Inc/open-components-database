defpackage ocdb/utils/netlist-checks/all :
  import core
  import collections
  import jitx
  import ocdb/utils/connections
  import ocdb/utils/netlist-checks/utils
  import ocdb/utils/netlist-checks/io-checks
  import ocdb/utils/netlist-checks/power-states
  import ocdb/utils/netlist-checks/single-pin-nets

public defn check-netlist (root-module:JITXObject) :
<<<<<<< HEAD
  val connections = connections(root-module)
  check-io(root-module, connections)
  ; check-single-pin-nets(root-module, connections)

  ; Todo: re-add once supported
  ; check-power-states(root-module, connections)

; defn check-no-connects (root-module:JITXObject) :
;   val all-connected-items = all-connected-items(root-module)
;   for instance in component-instances(root-module) do :
;     check-no-connects(instance, all-connected-items)        

; defn check-no-connects (instance:JITXObject, connected-items:ConnectedItems) :
;   val pins* =
;     for pin in pins(instance) filter :
;       needs-connection?(pin)
;   inside pcb-module :
;     check no-connects(instance, connected-items, pins*)
;   do(check-no-connections{instance, connected-items, _}, pins*)

; defn should-be-connected () :


; pcb-check no-connects :
=======
  val netlist = GlobalNetList(root-module)
  check-io(root-module, netlist)

  ; Todo: re-add once supported
  ; check-power-states(root-module, netlist)
>>>>>>> f8cbb98cb134d6666eb8e3fb0eb2a414b8e04978

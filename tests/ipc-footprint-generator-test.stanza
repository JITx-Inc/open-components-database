#use-added-syntax(esir)
defpackage ocdb/ipc-footprint-generator-test :
  import core
  import collections
  import math
  import esir
  import esir/utils
  import esir/gen
  import ocdb/tests/default-harness
  import esir/repl-lib
  import ocdb/generator-utils
  import jitpcb/visualizer
  import ocdb/ipc-footprint-generator
  import ocdb/generic-components
  import ocdb/land-patterns

pcb-component chip :
  pin p[1]
  pin p[2]
  package = {gen-chip-pkg("0402", "nominal", "res", true)}(p[1] => p[1], p[2] => p[2])

pcb-component molded :
  pin p[1]
  pin p[2]
  val fields = [["L-min", 1.95], 
                ["L-max", 2.05], 
                ["W-min", 2.25], 
                ["W-max", 2.35], 
                ["TW-min", 0.45], 
                ["TW-max", 0.55], 
                ["T-min", 0.15], 
                ["T-max", 0.35], 
                ["H", 1.2], 
                ["Type", "res"], 
                ["Density", "nominal"]]
  package = {gen-molded-pkg(fields)}(p[1] => p[1], p[2] => p[2])

pcb-component wirewound :
  pin p[1]
  pin p[2]
  val fields = [["L-min", 1.95], 
                ["L-max", 2.05], 
                ["W-min", 2.25], 
                ["W-max", 2.35], 
                ["TW-min", 0.45], 
                ["TW-max", 0.55], 
                ["T-min", 0.15], 
                ["T-max", 0.35], 
                ["H", 1.2], 
                ["Density", "nominal"]]
  package = {gen-wirewound-pkg(fields)}(p[1] => p[1], p[2] => p[2])
  
pcb-component melf :
  pin p[1]
  pin p[2]
  val fields = [["L-min", 1.95], 
                ["L-max", 2.05], 
                ["W-min", 2.25], 
                ["W-max", 2.35], 
                ["T-min", 0.15], 
                ["T-max", 0.35], 
                ["H", 1.2], 
                ["Type", "res"], 
                ["Density", "nominal"]]
  package = {gen-melf-pkg(fields)}(p[1] => p[1], p[2] => p[2])

pcb-component sodfl :
  pin p[1]
  pin p[2]
  val fields = [["L-min", 1.95], 
                ["L-max", 2.05], 
                ["W-min", 2.25], 
                ["W-max", 2.35], 
                ["T-min", 0.15], 
                ["T-max", 0.35], 
                ["TW-min", 0.45], 
                ["TW-max", 0.55], 
                ["E-min", 0.45], 
                ["E-max", 2.95], 
                ["H", 3.05], 
                ["Type", "res"], 
                ["Density", "nominal"]]
  package = {gen-sodfl-pkg(fields)}(p[1] => p[1], p[2] => p[2])

pcb-component capae :
  pin p[1]
  pin p[2]
  val fields = [["D-min", 0.95], 
                ["D-max", 1.05], 
                ["L-min", 1.95], 
                ["L-max", 2.05], 
                ["W-min", 2.25], 
                ["W-max", 2.35], 
                ["T-min", 0.15], 
                ["T-max", 0.35], 
                ["TW-min", 0.45], 
                ["TW-max", 0.55], 
                ["E-min", 0.45], 
                ["E-max", 2.95], 
                ["H", 3.05], 
                ["Type", "res"], 
                ["Density", "nominal"]]
  package = {gen-sodfl-pkg(fields)}(p[1] => p[1], p[2] => p[2])

pcb-component dfn-2 :
  pin p[1]
  pin p[2]
  val fields = [["L-min", 1.95], 
                ["L-max", 2.05], 
                ["W-min", 0.55], 
                ["W-max", 0.65], 
                ["T1-min", 0.15], 
                ["T1-max", 0.35], 
                ["TW1-min", 0.45], 
                ["TW1-max", 0.55], 
                ["H", 0.45], 
                ["H-s", 2.95], 
                ["S1", 0.75], 
                ["S1-o", 0.375], 
                ["Type", 2], 
                ["Density", "nominal"]]
  package = {gen-dfn-pkg(fields)}(p[1] => p[1], p[2] => p[2])

pcb-component dfn-3 :
  pin p[1]
  pin p[2]
  pin p[3]
  val fields = [["L-min", 1.95], 
                ["L-max", 2.05], 
                ["W-min", 0.55], 
                ["W-max", 0.65], 
                ["T1-min", 0.15], 
                ["T1-max", 0.35], 
                ["TW1-min", 0.05], 
                ["TW1-max", 0.15], 
                ["T2-min", 0.15], 
                ["T2-max", 0.35], 
                ["TW2-min", 0.45], 
                ["TW2-max", 0.55], 
                ["H", 0.45], 
                ["H-s", 2.95], 
                ["S1", 0.75], 
                ["S1-o", 0.375], 
                ["S2", 0.45], 
                ["Type", 3], 
                ["Density", "nominal"]]
  package = {gen-dfn-pkg(fields)}(p[1] => p[1], p[2] => p[2], p[3] => p[3])
  
pcb-component dfn-4 :
  pin p[1]
  pin p[2]
  pin p[3]
  pin p[4]
  val fields = [["L-min", 1.95], 
                ["L-max", 2.05], 
                ["W-min", 0.55], 
                ["W-max", 0.65], 
                ["T1-min", 0.15], 
                ["T1-max", 0.35], 
                ["TW1-min", 0.05], 
                ["TW1-max", 0.15], 
                ["H", 0.45], 
                ["H-s", 2.95], 
                ["S1", 0.75], 
                ["S1-o", 0.375], 
                ["S2", 0.45], 
                ["Type", 4], 
                ["Density", "nominal"]]
  package = {gen-dfn-pkg(fields)}(p[1] => p[1], p[2] => p[2], p[3] => p[3], p[4] => p[4])

pcb-module my-design :
  inst r : {gen-res-cmp(1000.0)}
  inst l : {ocdb/texas-instruments/TPS65988/component}
  inst m : {ocdb/texas-instruments/ISO1540/component} 
  inst chp : chip 
  inst mldd : molded
  inst mlf : melf
  inst ww : wirewound
  inst sdfl : sodfl
  inst dfn2 : dfn-2
  inst dfn3 : dfn-3
  inst dfn4 : dfn-4
  ;inst t : {ocdb/wurth/691412320002M/component}
  

val main-design = default-board(my-design, 4, 100.0, 75.0)

;view(test)
view(main-design)